{"version":3,"sources":["node_modules/@codemirror/legacy-modes/mode/stex.js"],"names":["mkStex","mathMode","pushCommand","state","command","cmdState","push","peekCommand","length","popCommand","plug","pop","closeBracket","getMostPowerful","context","i","name","styleIdentifier","addPluginPattern","pluginName","cmdStyle","styles","this","bracketNo","style","argument","openBracket","plugins","setState","f","normal","source","match","cmdName","current","slice","hasOwnProperty","beginParams","inMathMode","ch","next","skipToEnd","test","eatWhile","endModeSeq","eatSpace","peek","lastPlug","eat","startState","copyState","s","token","stream","blankLine","languageData","commentTokens","line","stex","stexMath"],"mappings":"AAAA,SAASA,EAAOC,GACd,SAASC,EAAYC,EAAOC,GAC1BD,EAAME,SAASC,KAAKF,GAGtB,SAASG,EAAYJ,GACnB,GAAIA,EAAME,SAASG,OAAS,EAAG,CAC7B,OAAOL,EAAME,SAASF,EAAME,SAASG,OAAS,OACzC,CACL,OAAO,MAIX,SAASC,EAAWN,GAClB,IAAIO,EAAOP,EAAME,SAASM,MAC1B,GAAID,EAAM,CACRA,EAAKE,gBAKT,SAASC,EAAgBV,GACvB,IAAIW,EAAUX,EAAME,SACpB,IAAK,IAAIU,EAAID,EAAQN,OAAS,EAAGO,GAAK,EAAGA,IAAK,CAC5C,IAAIL,EAAOI,EAAQC,GACnB,GAAIL,EAAKM,MAAQ,UAAW,CAC1B,SAEF,OAAON,EAET,MAAO,CAAEO,gBAAiB,WAAa,OAAO,OAGhD,SAASC,EAAiBC,EAAYC,EAAUC,GAC9C,OAAO,WACLC,KAAKN,KAAOG,EACZG,KAAKC,UAAY,EACjBD,KAAKE,MAAQJ,EACbE,KAAKD,OAASA,EACdC,KAAKG,SAAW,KAEhBH,KAAKL,gBAAkB,WACrB,OAAOK,KAAKD,OAAOC,KAAKC,UAAY,IAAM,MAE5CD,KAAKI,YAAc,WACjBJ,KAAKC,YACL,MAAO,WAETD,KAAKV,aAAe,cAIxB,IAAIe,EAAU,GAEdA,EAAQ,gBAAkBT,EAAiB,eAAgB,MAAO,CAAC,SAAU,YAC7ES,EAAQ,iBAAmBT,EAAiB,gBAAiB,MAAO,CAAC,GAAI,SACzES,EAAQ,cAAgBT,EAAiB,aAAc,MAAO,CAAC,SAC/DS,EAAQ,SAAWT,EAAiB,QAAS,MAAO,CAAC,SACrDS,EAAQ,OAAST,EAAiB,MAAO,MAAO,CAAC,SAEjDS,EAAQ,SAAeT,EAAiB,QAAa,MAAO,CAAC,SAC7DS,EAAQ,OAAeT,EAAiB,MAAa,MAAO,CAAC,SAC7DS,EAAQ,SAAeT,EAAiB,QAAa,MAAO,CAAC,SAC7DS,EAAQ,QAAeT,EAAiB,OAAa,MAAO,CAAC,SAC7DS,EAAQ,WAAeT,EAAiB,UAAa,MAAO,CAAC,SAC7DS,EAAQ,WAAeT,EAAiB,UAAa,MAAO,CAAC,SAC7DS,EAAQ,YAAeT,EAAiB,WAAa,MAAO,CAAC,SAE7DS,EAAQ,WAAa,WACnBL,KAAKN,KAAO,UACZM,KAAKE,MAAQ,MAEbF,KAAKL,gBAAkBK,KAAKI,YAAcJ,KAAKV,aAAe,cAGhE,SAASgB,EAASzB,EAAO0B,GACvB1B,EAAM0B,EAAIA,EAIZ,SAASC,EAAOC,EAAQ5B,GACtB,IAAIO,EAEJ,GAAIqB,EAAOC,MAAM,iBAAkB,CACjC,IAAIC,EAAUF,EAAOG,UAAUC,MAAM,GACrCzB,EAAOiB,EAAQS,eAAeH,GAAWN,EAAQM,GAAWN,EAAQ,WACpEjB,EAAO,IAAIA,EACXR,EAAYC,EAAOO,GACnBkB,EAASzB,EAAOkC,GAChB,OAAO3B,EAAKc,MAId,GAAIO,EAAOC,MAAM,gBAAiB,CAChC,MAAO,MAIT,GAAID,EAAOC,MAAM,gBAAiB,CAChC,MAAO,MAIT,GAAID,EAAOC,MAAM,OAAQ,CACvBJ,EAASzB,GAAO,SAAS4B,EAAQ5B,GAAQ,OAAOmC,EAAWP,EAAQ5B,EAAO,UAC1E,MAAO,UAET,GAAI4B,EAAOC,MAAM,OAAQ,CACvBJ,EAASzB,GAAO,SAAS4B,EAAQ5B,GAAQ,OAAOmC,EAAWP,EAAQ5B,EAAO,UAC1E,MAAO,UAET,GAAI4B,EAAOC,MAAM,MAAO,CACtBJ,EAASzB,GAAO,SAAS4B,EAAQ5B,GAAQ,OAAOmC,EAAWP,EAAQ5B,EAAO,SAC1E,MAAO,UAET,GAAI4B,EAAOC,MAAM,KAAM,CACrBJ,EAASzB,GAAO,SAAS4B,EAAQ5B,GAAQ,OAAOmC,EAAWP,EAAQ5B,EAAO,QAC1E,MAAO,UAGT,IAAIoC,EAAKR,EAAOS,OAChB,GAAID,GAAM,IAAK,CACbR,EAAOU,YACP,MAAO,eACF,GAAIF,GAAM,KAAOA,GAAM,IAAK,CACjC7B,EAAOH,EAAYJ,GACnB,GAAIO,EAAM,CACRA,EAAKE,aAAa2B,GAClBX,EAASzB,EAAOkC,OACX,CACL,MAAO,QAET,MAAO,eACF,GAAIE,GAAM,KAAOA,GAAM,IAAK,CACjC7B,EAAOiB,EAAQ,WACfjB,EAAO,IAAIA,EACXR,EAAYC,EAAOO,GACnB,MAAO,eACF,GAAI,KAAKgC,KAAKH,GAAK,CACxBR,EAAOY,SAAS,UAChB,MAAO,WACF,CACLZ,EAAOY,SAAS,WAChBjC,EAAOG,EAAgBV,GACvB,GAAIO,EAAKM,MAAQ,QAAS,CACxBN,EAAKe,SAAWM,EAAOG,UAEzB,OAAOxB,EAAKO,mBAIhB,SAASqB,EAAWP,EAAQ5B,EAAOyC,GACjC,GAAIb,EAAOc,WAAY,CACrB,OAAO,KAET,GAAID,GAAcb,EAAOC,MAAMY,GAAa,CAC1ChB,EAASzB,EAAO2B,GAChB,MAAO,UAET,GAAIC,EAAOC,MAAM,iBAAkB,CACjC,MAAO,MAET,GAAID,EAAOC,MAAM,cAAe,CAC9B,MAAO,uBAGT,GAAID,EAAOC,MAAM,gBAAiB,CAChC,MAAO,MAGT,GAAID,EAAOC,MAAM,cAAe,CAC9B,MAAO,MAGT,GAAID,EAAOC,MAAM,WAAY,CAC3B,MAAO,MAGT,GAAID,EAAOC,MAAM,4BAA6B,CAC5C,OAAO,KAET,GAAID,EAAOC,MAAM,4BAA6B,CAC5C,MAAO,SAET,IAAIO,EAAKR,EAAOS,OAChB,GAAID,GAAM,KAAOA,GAAM,KAAOA,GAAM,KAAOA,GAAM,KAAOA,GAAM,KAAOA,GAAM,IAAK,CAC9E,MAAO,UAGT,GAAIA,GAAM,IAAK,CACbR,EAAOU,YACP,MAAO,UAET,MAAO,QAGT,SAASJ,EAAYN,EAAQ5B,GAC3B,IAAIoC,EAAKR,EAAOe,OAAQC,EACxB,GAAIR,GAAM,KAAOA,GAAM,IAAK,CAC1BQ,EAAWxC,EAAYJ,GACvB4C,EAASrB,YAAYa,GACrBR,EAAOiB,IAAIT,GACXX,EAASzB,EAAO2B,GAChB,MAAO,UAET,GAAI,UAAUY,KAAKH,GAAK,CACtBR,EAAOiB,IAAIT,GACX,OAAO,KAETX,EAASzB,EAAO2B,GAChBrB,EAAWN,GAEX,OAAO2B,EAAOC,EAAQ5B,GAGxB,MAAO,CACL8C,WAAY,WACV,IAAIpB,EAAI5B,EAAW,SAAS8B,EAAQ5B,GAAQ,OAAOmC,EAAWP,EAAQ5B,IAAY2B,EAClF,MAAO,CACLzB,SAAU,GACVwB,EAAGA,IAGPqB,UAAW,SAASC,GAClB,MAAO,CACL9C,SAAU8C,EAAE9C,SAAS8B,QACrBN,EAAGsB,EAAEtB,IAGTuB,MAAO,SAASC,EAAQlD,GACtB,OAAOA,EAAM0B,EAAEwB,EAAQlD,IAEzBmD,UAAW,SAASnD,GAClBA,EAAM0B,EAAIC,EACV3B,EAAME,SAASG,OAAS,GAE1B+C,aAAc,CACZC,cAAe,CAACC,KAAM,OAKhB,MAACC,EAAO1D,EAAO,OACf,MAAC2D,EAAW3D,EAAO","sourcesContent":["function mkStex(mathMode) {\n  function pushCommand(state, command) {\n    state.cmdState.push(command);\n  }\n\n  function peekCommand(state) {\n    if (state.cmdState.length > 0) {\n      return state.cmdState[state.cmdState.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  function popCommand(state) {\n    var plug = state.cmdState.pop();\n    if (plug) {\n      plug.closeBracket();\n    }\n  }\n\n  // returns the non-default plugin closest to the end of the list\n  function getMostPowerful(state) {\n    var context = state.cmdState;\n    for (var i = context.length - 1; i >= 0; i--) {\n      var plug = context[i];\n      if (plug.name == \"DEFAULT\") {\n        continue;\n      }\n      return plug;\n    }\n    return { styleIdentifier: function() { return null; } };\n  }\n\n  function addPluginPattern(pluginName, cmdStyle, styles) {\n    return function () {\n      this.name = pluginName;\n      this.bracketNo = 0;\n      this.style = cmdStyle;\n      this.styles = styles;\n      this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n      this.styleIdentifier = function() {\n        return this.styles[this.bracketNo - 1] || null;\n      };\n      this.openBracket = function() {\n        this.bracketNo++;\n        return \"bracket\";\n      };\n      this.closeBracket = function() {};\n    };\n  }\n\n  var plugins = {};\n\n  plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n  plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n  plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n  plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n  plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n  plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n  plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n  plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n  plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n  plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n  plugins[\"DEFAULT\"] = function () {\n    this.name = \"DEFAULT\";\n    this.style = \"tag\";\n\n    this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n  };\n\n  function setState(state, f) {\n    state.f = f;\n  }\n\n  // called when in a normal (no environment) context\n  function normal(source, state) {\n    var plug;\n    // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      var cmdName = source.current().slice(1);\n      plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      setState(state, beginParams);\n      return plug.style;\n    }\n\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n      return \"tag\";\n    }\n\n    // find if we're starting various math modes\n    if (source.match(\"\\\\[\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"\\\\(\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n      return \"keyword\";\n    }\n\n    var ch = source.next();\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    } else if (ch == '}' || ch == ']') {\n      plug = peekCommand(state);\n      if (plug) {\n        plug.closeBracket(ch);\n        setState(state, beginParams);\n      } else {\n        return \"error\";\n      }\n      return \"bracket\";\n    } else if (ch == '{' || ch == '[') {\n      plug = plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      return \"bracket\";\n    } else if (/\\d/.test(ch)) {\n      source.eatWhile(/[\\w.%]/);\n      return \"atom\";\n    } else {\n      source.eatWhile(/[\\w\\-_]/);\n      plug = getMostPowerful(state);\n      if (plug.name == 'begin') {\n        plug.argument = source.current();\n      }\n      return plug.styleIdentifier();\n    }\n  }\n\n  function inMathMode(source, state, endModeSeq) {\n    if (source.eatSpace()) {\n      return null;\n    }\n    if (endModeSeq && source.match(endModeSeq)) {\n      setState(state, normal);\n      return \"keyword\";\n    }\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      return \"tag\";\n    }\n    if (source.match(/^[a-zA-Z]+/)) {\n      return \"variableName.special\";\n    }\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/]/)) {\n      return \"tag\";\n    }\n    // special math-mode characters\n    if (source.match(/^[\\^_&]/)) {\n      return \"tag\";\n    }\n    // non-special characters\n    if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n      return null;\n    }\n    if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n      return \"number\";\n    }\n    var ch = source.next();\n    if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    }\n\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    }\n    return \"error\";\n  }\n\n  function beginParams(source, state) {\n    var ch = source.peek(), lastPlug;\n    if (ch == '{' || ch == '[') {\n      lastPlug = peekCommand(state);\n      lastPlug.openBracket(ch);\n      source.eat(ch);\n      setState(state, normal);\n      return \"bracket\";\n    }\n    if (/[ \\t\\r]/.test(ch)) {\n      source.eat(ch);\n      return null;\n    }\n    setState(state, normal);\n    popCommand(state);\n\n    return normal(source, state);\n  }\n\n  return {\n    startState: function() {\n      var f = mathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n      return {\n        cmdState: [],\n        f: f\n      };\n    },\n    copyState: function(s) {\n      return {\n        cmdState: s.cmdState.slice(),\n        f: s.f\n      };\n    },\n    token: function(stream, state) {\n      return state.f(stream, state);\n    },\n    blankLine: function(state) {\n      state.f = normal;\n      state.cmdState.length = 0;\n    },\n    languageData: {\n      commentTokens: {line: \"%\"}\n    }\n  };\n};\n\nexport const stex = mkStex(false)\nexport const stexMath = mkStex(true)\n"]}