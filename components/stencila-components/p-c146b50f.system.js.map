{"version":3,"sources":["src/components/code/codeUtils.ts"],"names":["isPending","exports","status","_a","includes","executionIconByStatus","executeStatus","executeRequired","icon","color","title"],"mappings":"2EAIaA,EAASC,EAAA,KAAG,SAACC,SACxB,OACEC,GAACD,IAAM,MAANA,SAAM,OAAA,EAANA,EAAQE,SAAS,cAAe,OAC/BF,IAAM,MAANA,SAAM,OAAA,EAANA,EAAQE,SAAS,gBAAiB,QAAK,MAAAD,SAAA,EAAAA,EACzC,aAISE,EAAqBJ,EAAA,KAAG,SACnCK,EACAC,GAOA,OAAQD,GACN,IAAK,YAAa,CAChB,MAAO,CACLE,KAAM,UACNC,MAAO,uBACPC,MAAO,aAGX,IAAK,4BAA6B,CAChC,MAAO,CACLF,KAAM,UACNC,MAAO,sBACPC,MAAO,iCAGX,IAAK,UAAW,CACd,MAAO,CACLF,KAAM,WACNC,MAAO,uBACPC,MAAO,WAGX,IAAK,0BAA2B,CAC9B,MAAO,CACLF,KAAM,WACNC,MAAO,sBACPC,MAAO,gCAMb,OAAQH,GACN,IAAK,gBAAiB,CACpB,MAAO,CACLC,KAAM,uBACNC,MAAO,uBACPC,MAAO,eAGX,IAAK,qBAAsB,CACzB,MAAO,CACLF,KAAM,UACNC,MAAO,sBACPC,MAAO,uBAGX,IAAK,sBAAuB,CAC1B,MAAO,CACLF,KAAM,UACNC,MAAO,oBACPC,MAAO,wBAGX,IAAK,mBAAoB,CACvB,MAAO,CACLF,KAAM,UACNC,MAAO,oBACPC,MAAO,qBAGX,IAAK,SAAU,CACb,MAAO,CACLF,KAAM,eACNC,MAAO,sBACPC,MAAO,WAMb,OAAQJ,GACN,IAAK,YAAa,CAChB,MAAO,CACLE,KAAM,kBACNC,MAAO,uBACPC,MAAO,aAGX,IAAK,SAAU,CACb,MAAO,CACLF,KAAM,eACNC,MAAO,sBACPC,MAAO,UAGX,IAAK,YAAa,CAChB,MAAO,CACLF,KAAM,SACNC,MAAO,oBACPC,MAAO,cAQb,MAAO,CACLF,KAAM,WACNC,MAAO,uBACPC,MAAO","sourcesContent":["import { Colors } from '../../types'\nimport { IconNames } from '../icon/iconNames'\nimport { ExecuteRequired, ExecuteStatus } from './codeTypes'\n\nexport const isPending = (status: ExecuteStatus): boolean => {\n  return (\n    (status?.includes('Running') === true ||\n      status?.includes('Scheduled') === true) ??\n    false\n  )\n}\n\nexport const executionIconByStatus = (\n  executeStatus: ExecuteStatus,\n  executeRequired: ExecuteRequired\n): {\n  icon: IconNames\n  color: `${Colors}, ${string}`\n  title: string\n} => {\n  // If scheduled or running then show that status\n  switch (executeStatus) {\n    case 'Scheduled': {\n      return {\n        icon: 'timer-2',\n        color: 'neutral-500, #6e7591',\n        title: 'Scheduled',\n      }\n    }\n    case 'ScheduledPreviouslyFailed': {\n      return {\n        icon: 'timer-2',\n        color: 'danger-500, #cf445e',\n        title: 'Scheduled (previously failed)',\n      }\n    }\n    case 'Running': {\n      return {\n        icon: 'loader-2',\n        color: 'neutral-500, #6e7591',\n        title: 'Running',\n      }\n    }\n    case 'RunningPreviouslyFailed': {\n      return {\n        icon: 'loader-2',\n        color: 'danger-500, #cf445e',\n        title: 'Running (previously failed)',\n      }\n    }\n  }\n\n  // Otherwise, if execution is required show why\n  switch (executeRequired) {\n    case 'NeverExecuted': {\n      return {\n        icon: 'indeterminate-circle',\n        color: 'neutral-500, #6e7591',\n        title: 'Not run yet',\n      }\n    }\n    case 'DependenciesFailed': {\n      return {\n        icon: 'refresh',\n        color: 'danger-500, #cf445e',\n        title: 'Dependencies failed',\n      }\n    }\n    case 'DependenciesChanged': {\n      return {\n        icon: 'refresh',\n        color: 'warn-600, #ba8925',\n        title: 'Dependencies changed',\n      }\n    }\n    case 'SemanticsChanged': {\n      return {\n        icon: 'refresh',\n        color: 'warn-600, #ba8925',\n        title: 'Semantics changed',\n      }\n    }\n    case 'Failed': {\n      return {\n        icon: 'close-circle',\n        color: 'danger-500, #cf445e',\n        title: 'Failed',\n      }\n    }\n  }\n\n  // Otherwise, show last status\n  switch (executeStatus) {\n    case 'Succeeded': {\n      return {\n        icon: 'checkbox-circle',\n        color: 'success-500, #3c8455',\n        title: 'Succeeded',\n      }\n    }\n    case 'Failed': {\n      return {\n        icon: 'close-circle',\n        color: 'danger-500, #cf445e',\n        title: 'Failed',\n      }\n    }\n    case 'Cancelled': {\n      return {\n        icon: 'forbid',\n        color: 'warn-600, #ba8925',\n        title: 'Cancelled',\n      }\n    }\n  }\n\n  // Although this should be redundant, it avoids this function every returning undefined\n  // which causes other errors (e.g. if there is a patching error or a new variant added to\n  // the above enums)\n  return {\n    icon: 'question',\n    color: 'neutral-500, #6e7591',\n    title: 'Unknown status',\n  }\n}\n"]}