function e(e){n(e,"start");var r={},t=e.languageData||{},s=false;for(var i in e)if(i!=t&&e.hasOwnProperty(i)){var a=r[i]=[],g=e[i];for(var f=0;f<g.length;f++){var x=g[f];a.push(new o(x,e));if(x.indent||x.dedent)s=true}}return{startState:function(){return{state:"start",pending:null,indent:s?[]:null}},copyState:function(e){var n={state:e.state,pending:e.pending,indent:e.indent&&e.indent.slice(0)};if(e.stack)n.stack=e.stack.slice(0);return n},token:l(r),indent:u(r,t),languageData:t}}function n(e,n){if(!e.hasOwnProperty(n))throw new Error("Undefined state "+n+" in simple mode")}function r(e,n){if(!e)return/(?:)/;var r="";if(e instanceof RegExp){if(e.ignoreCase)r="i";e=e.source}else{e=String(e)}return new RegExp((n===false?"":"^")+"(?:"+e+")",r)}function t(e){if(!e)return null;if(e.apply)return e;if(typeof e=="string")return e.replace(/\./g," ");var n=[];for(var r=0;r<e.length;r++)n.push(e[r]&&e[r].replace(/\./g," "));return n}function o(e,o){if(e.next||e.push)n(o,e.next||e.push);this.regex=r(e.regex);this.token=t(e.token);this.data=e}function l(e){return function(n,r){if(r.pending){var t=r.pending.shift();if(r.pending.length==0)r.pending=null;n.pos+=t.text.length;return t.token}var o=e[r.state];for(var l=0;l<o.length;l++){var u=o[l];var s=(!u.data.sol||n.sol())&&n.match(u.regex);if(s){if(u.data.next){r.state=u.data.next}else if(u.data.push){(r.stack||(r.stack=[])).push(r.state);r.state=u.data.push}else if(u.data.pop&&r.stack&&r.stack.length){r.state=r.stack.pop()}if(u.data.indent)r.indent.push(n.indentation()+n.indentUnit);if(u.data.dedent)r.indent.pop();var i=u.token;if(i&&i.apply)i=i(s);if(s.length>2&&u.token&&typeof u.token!="string"){r.pending=[];for(var a=2;a<s.length;a++)if(s[a])r.pending.push({text:s[a],token:u.token[a-1]});n.backUp(s[0].length-(s[1]?s[1].length:0));return i[0]}else if(i&&i.join){return i[0]}else{return i}}}n.next();return null}}function u(e,n){return function(r,t){if(r.indent==null||n.dontIndentStates&&n.doneIndentState.indexOf(r.state)>-1)return null;var o=r.indent.length-1,l=e[r.state];e:for(;;){for(var u=0;u<l.length;u++){var s=l[u];if(s.data.dedent&&s.data.dedentIfLineStart!==false){var i=s.regex.exec(t);if(i&&i[0]){o--;if(s.next||s.push)l=e[s.next||s.push];t=t.slice(i[0].length);continue e}}}break}return o<0?0:r.indent[o]}}var s="from";var i=new RegExp("^(\\s*)\\b("+s+")\\b","i");var a=["run","cmd","entrypoint","shell"];var g=new RegExp("^(\\s*)("+a.join("|")+")(\\s+\\[)","i");var f="expose";var x=new RegExp("^(\\s*)("+f+")(\\s+)","i");var k=["arg","from","maintainer","label","env","add","copy","volume","user","workdir","onbuild","stopsignal","healthcheck","shell"];var v=[s,f].concat(a).concat(k),p="("+v.join("|")+")",d=new RegExp("^(\\s*)"+p+"(\\s*)(#.*)?$","i"),c=new RegExp("^(\\s*)"+p+"(\\s+)","i");const m=e({start:[{regex:/^\s*#.*$/,sol:true,token:"comment"},{regex:i,token:[null,"keyword"],sol:true,next:"from"},{regex:d,token:[null,"keyword",null,"error"],sol:true},{regex:g,token:[null,"keyword",null],sol:true,next:"array"},{regex:x,token:[null,"keyword",null],sol:true,next:"expose"},{regex:c,token:[null,"keyword",null],sol:true,next:"arguments"},{regex:/./,token:null}],from:[{regex:/\s*$/,token:null,next:"start"},{regex:/(\s*)(#.*)$/,token:[null,"error"],next:"start"},{regex:/(\s*\S+\s+)(as)/i,token:[null,"keyword"],next:"start"},{token:null,next:"start"}],single:[{regex:/(?:[^\\']|\\.)/,token:"string"},{regex:/'/,token:"string",pop:true}],double:[{regex:/(?:[^\\"]|\\.)/,token:"string"},{regex:/"/,token:"string",pop:true}],array:[{regex:/\]/,token:null,next:"start"},{regex:/"(?:[^\\"]|\\.)*"?/,token:"string"}],expose:[{regex:/\d+$/,token:"number",next:"start"},{regex:/[^\d]+$/,token:null,next:"start"},{regex:/\d+/,token:"number"},{regex:/[^\d]+/,token:null},{token:null,next:"start"}],arguments:[{regex:/^\s*#.*$/,sol:true,token:"comment"},{regex:/"(?:[^\\"]|\\.)*"?$/,token:"string",next:"start"},{regex:/"/,token:"string",push:"double"},{regex:/'(?:[^\\']|\\.)*'?$/,token:"string",next:"start"},{regex:/'/,token:"string",push:"single"},{regex:/[^#"']+[\\`]$/,token:null},{regex:/[^#"']+$/,token:null,next:"start"},{regex:/[^#"']+/,token:null},{token:null,next:"start"}],languageData:{commentTokens:{line:"#"}}});export{m as dockerFile};
//# sourceMappingURL=p-1ae5c5cb.js.map