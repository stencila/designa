{"version":3,"sources":["node_modules/@lezer/xml/dist/index.es.js","node_modules/@codemirror/lang-xml/dist/index.js"],"names":["StartTag","StartCloseTag","MissingCloseTag","mismatchedStartCloseTag","incompleteStartCloseTag","commentContent$1","piContent$1","cdataContent$1","Element","OpenTag","nameChar","ch","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","input","offset","pos","peek","name","next","String","fromCharCode","ElementContext","parent","this","hash","i","length","charCodeAt","elementContext","ContextTracker","start","[object Object]","context","term","stack","node","_stack","type","id","strict","startTag","ExternalTokenizer","advance","acceptToken","cx","contextual","scanTo","end","endPos","len","commentContent","piContent","cdataContent","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","NodeProp","closedBy","openedBy","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","Document","tokenPrec","tagName","doc","tag","getChild","sliceString","from","to","elementName","tree","firstChild","attrName","attr","getChildren","find","a","findParentElement","cur","findLocation","state","_a","at","syntaxTree","resolveInner","inTag","lastChild","isError","elt","before","childBefore","spec","attrs","attrValues","children","completion","Object","assign","label","openCompletion","closeCompletion","boost","closeNameCompletion","text","textContent","map","s","Identifier","attrCompletion","valueCompletion","test","completeFromSchema","eltSpecs","attrSpecs","allAttrs","globalAttrs","create","push","global","values","allElements","topElements","byName","attrVals","attributes","concat","top","loc","explicit","parentName","options","span","closing","last","e","openTag","sliceDoc","xmlLanguage","LRLanguage","define","configure","props","indentNodeProp","add","closed","textAfter","lineIndent","unit","column","foldNodeProp","subtree","first","styleTags","Text","tags","content","StartTag StartCloseTag EndTag SelfCloseEndTag","angleBracket","TagName","MismatchedCloseTag/Tagname","invalid","AttributeName","attributeName","AttributeValue","attributeValue","Is","definitionOperator","EntityReference CharacterReference","character","Comment","blockComment","ProcessingInst","processingInstruction","DoctypeDecl","documentMeta","Cdata","special","string","languageData","commentTokens","block","open","close","indentOnInput","xml","conf","LanguageSupport","data","of","autocomplete","elements"],"mappings":"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","sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { NodeProp } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 36,\n  piContent$1 = 37,\n  cdataContent$1 = 38,\n  Element = 10,\n  OpenTag = 12;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    for (let endPos = 0, len = 0;; len++) {\n      if (input.next < 0) {\n        if (len) input.acceptToken(type);\n        break\n      } \n      if (input.next == end.charCodeAt(endPos)) {\n        endPos++;\n        if (endPos == end.length) {\n          if (len > end.length) input.acceptToken(type, 1 - end.length);\n          break\n        }\n      } else {\n        endPos = 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 13,\n  states: \"-OOQOaOOOcObO'#CcOkOdO'#CdOOOP'#Cv'#CvOsOaO'#DTO!XOaOOOOOQ'#Cw'#CwO!aObO,58}OOOP,58},58}OOOS'#Cx'#CxO!iOdO,59OOOOP,59O,59OOOOP-E6t-E6tO!qO`O'#ChO#kOqO'#CfOOOP'#Cf'#CfO#rOaO'#CyQ$TOPOOO$YOaOOOOOQ-E6u-E6uOOOP1G.i1G.iOOOS-E6v-E6vOOOP1G.j1G.jOOOO'#Cz'#CzO$hO`O,59SO$pO!bO,59SO%OOhO'#CqO%WO`O'#CrOOOP'#D]'#D]OOOP'#C}'#C}O%`OqO,59QO%gO`O'#CsOOOP,59Q,59QOOOP,59e,59eOOOP-E6w-E6wO$TOPOOOOOO-E6x-E6xO%oO!bO1G.nO%oO!bO1G.nO%}O`O'#CjO&VO!bO'#C{O&eO!bO1G.nOOOP1G.n1G.nOOOP1G.{1G.{OOOW'#DO'#DOO&pOhO,59]OOOP,59],59]O&xO`O,59^O'QO`O,59^OOOP-E6{-E6{OOOP1G.l1G.lO'YO`O,59_O'bO`O,59_O'jO!bO7+$YO'xO!bO7+$YOOOP7+$Y7+$YOOOP7+$g7+$gO(TO`O,59UO(]O`O,59UO(eO!bO,59gOOOO-E6y-E6yOOOW-E6|-E6|OOOP1G.w1G.wO(sO`O1G.xO(sO`O1G.xOOOP1G.x1G.xO({O`O1G.yO({O`O1G.yOOOP1G.y1G.yO)TO!bO<<GtOOOP<<Gt<<GtOOOP<<HR<<HRO(]O`O1G.pO(]O`O1G.pO)`O#tO'#CmOOOO1G.p1G.pO)nO`O7+$dOOOP7+$d7+$dO)vO`O7+$eOOOP7+$e7+$eOOOPAN=`AN=`OOOPAN=mAN=mO(]O`O7+$[OOOO7+$[7+$[OOOO'#C|'#C|O*OO#tO,59XOOOO,59X,59XOOOP<<HO<<HOOOOP<<HP<<HPOOOO<<Gv<<GvOOOO-E6z-E6zOOOO1G.s1G.s\",\n  stateData: \"*^~OyPOzRO|QOPwPXwP~OtUOxWO~OuXO{ZO~OyPOzRO|QOPwXXwXswX~OP]OXbO~OtUOxdO~OuXO{fO~O]iOzgO~OP]OQoOSkOTlOblOclOdlOyPO|QO!RjO~ORpO~P!yOyPOzRO|QOPwPswP~OP]O~OyPOzRO|QOPwP~O]uOzgO~OZzO_wOh{OzgO~Ov|O!Q!OO~O]!QOzgO~OR!SO~P!yO]!UOzgO~OZ!XO_wOh!YOzgO~O`![OzgO~OzgOZoX_oXhoX~OZ!XO_wOh!YO~Ov|O!Q!`O~O]!aOzgO~OZ!cOzgO~O]!dOzgO~OZ!fOzgO~OZ!hO_wOh!iOzgO~OZ!hO_wOh!iO~O`!jOzgO~OzgO}!lO~OzgOZoa_oahoa~OZ!oOzgO~OZ!qOzgO~OZ!rO_wOh!sO~Ob!vOc!vO}!xO!O!vO~OZ!yOzgO~OZ!zOzgO~Ob!vOc!vO}!}O!O!vO~O\",\n  goto: \"&S!QPPPPPPP!R!RP!]P!fP!mPP!vPPP!X!X#QP#W#_#g#m#s#z%S%c%i%oPPPP%uPPPPPPP&OWROS`bTl^nU`TasTl^nZ^T^ans_xiuvy!V!W!gQ!m![S!u!j!kR!{!tQp^R!SnZ_T^ansUSO`bR[SQVPRcVQYQReYSaTsRraQh]jthv!P!T!V!Z!]!b!e!k!n!p!tQviQ!PkQ!ToQ!VuQ!ZwQ!]xQ!b!QQ!e!UQ!k![Q!n!aQ!p!dR!t!jQyiS!WuvU!^y!W!gR!g!VQ!w!lR!|!wQn^R!RnQ}jR!_}QTOQq`RsbTm^n\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Comment ProcessingInst DoctypeDecl Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue EntityReference CharacterReference Text Cdata MismatchedCloseTag CloseTag SelfCloseEndTag SelfClosingTag\",\n  maxTerm: 49,\n  context: elementContext,\n  nodeProps: [\n    [NodeProp.closedBy, 1,\"SelfCloseEndTag EndTag\",12,\"CloseTag MissingCloseTag\"],\n    [NodeProp.openedBy, 11,\"StartTag StartCloseTag\",23,\"OpenTag\",24,\"StartTag\"]\n  ],\n  skippedNodes: [0],\n  repeatNodeCount: 9,\n  tokenData: \"Az~R!WOX$kXY%rYZ%rZ]$k]^%r^p$kpq%rqr$krs&tsv$kvw'Uw}$k}!O(q!O!P$k!P!Q*n!Q![$k![!]+z!]!^$k!^!_/s!_!`=i!`!a>U!a!b>q!b!c$k!c!}+z!}#P$k#P#Q?}#Q#R$k#R#S+z#S#T$k#T#o+z#o%W$k%W%o+z%o%p$k%p&a+z&a&b$k&b1p+z1p4U$k4U4d+z4d4e$k4e$IS+z$IS$I`$k$I`$Ib+z$Ib$Kh$k$Kh%#t+z%#t&/x$k&/x&Et+z&Et&FV$k&FV;'S+z;'S;:j/S;:j?&r$k?&r?Ah+z?Ah?BY$k?BY?Mn+z?Mn~$kY$rUdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$kQ%ZRdQOv%Uw!^%U!_~%UW%iR!OWOr%dsv%dw~%d_%{]dQ!OWzTOX$kXY%rYZ%rZ]$k]^%r^p$kpq%rqr$krs%Usv$kw!^$k!^!_%d!_~$kZ&{R}XdQOv%Uw!^%U!_~%U~'XTOp'hqs'hst(Pt!]'h!^~'h~'kTOp'hqs'ht!]'h!]!^'z!^~'h~(POb~~(SROp(]q!](]!^~(]~(`SOp(]q!](]!]!^(l!^~(]~(qOc~Z(xWdQ!OWOr$krs%Usv$kw}$k}!O)b!O!^$k!^!_%d!_~$kZ)iWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a*R!a~$kZ*[UxPdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k^*uWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a+_!a~$k^+hUhSdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k_,V}_S]PdQ!OWOr$krs%Usv$kw}$k}!O+z!O!P+z!P!Q$k!Q![+z![!]+z!]!^$k!^!_%d!_!c$k!c!}+z!}#R$k#R#S+z#S#T$k#T#o+z#o$}$k$}%O+z%O%W$k%W%o+z%o%p$k%p&a+z&a&b$k&b1p+z1p4U+z4U4d+z4d4e$k4e$IS+z$IS$I`$k$I`$Ib+z$Ib$Je$k$Je$Jg+z$Jg$Kh$k$Kh%#t+z%#t&/x$k&/x&Et+z&Et&FV$k&FV;'S+z;'S;:j/S;:j?&r$k?&r?Ah+z?Ah?BY$k?BY?Mn+z?Mn~$k_/ZWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_;=`$k;=`<%l+z<%l~$kZ/xU!OWOq%dqr0[sv%dw!a%d!a!b=X!b~%dZ0aZ!OWOr%dsv%dw}%d}!O1S!O!f%d!f!g1x!g!}%d!}#O5s#O#W%d#W#X:k#X~%dZ1XT!OWOr%dsv%dw}%d}!O1h!O~%dZ1oRyR!OWOr%dsv%dw~%dX1}T!OWOr%dsv%dw!q%d!q!r2^!r~%dX2cT!OWOr%dsv%dw!e%d!e!f2r!f~%dX2wT!OWOr%dsv%dw!v%d!v!w3W!w~%dX3]T!OWOr%dsv%dw!{%d!{!|3l!|~%dX3qT!OWOr%dsv%dw!r%d!r!s4Q!s~%dX4VT!OWOr%dsv%dw!g%d!g!h4f!h~%dX4kV!OWOr4frs5Qsv4fvw5Qw!`4f!`!a5c!a~4fP5TRO!`5Q!`!a5^!a~5QP5cOXPX5jRXP!OWOr%dsv%dw~%dY5xV!OWOr%dsv%dw!e%d!e!f6_!f#V%d#V#W8w#W~%dY6dT!OWOr%dsv%dw!f%d!f!g6s!g~%dY6xT!OWOr%dsv%dw!c%d!c!d7X!d~%dY7^T!OWOr%dsv%dw!v%d!v!w7m!w~%dY7rT!OWOr%dsv%dw!c%d!c!d8R!d~%dY8WT!OWOr%dsv%dw!}%d!}#O8g#O~%dY8nR!OW!RQOr%dsv%dw~%dY8|T!OWOr%dsv%dw#W%d#W#X9]#X~%dY9bT!OWOr%dsv%dw#T%d#T#U9q#U~%dY9vT!OWOr%dsv%dw#h%d#h#i:V#i~%dY:[T!OWOr%dsv%dw#T%d#T#U8R#U~%dX:pT!OWOr%dsv%dw#c%d#c#d;P#d~%dX;UT!OWOr%dsv%dw#V%d#V#W;e#W~%dX;jT!OWOr%dsv%dw#h%d#h#i;y#i~%dX<OT!OWOr%dsv%dw#m%d#m#n<_#n~%dX<dT!OWOr%dsv%dw#d%d#d#e<s#e~%dX<xT!OWOr%dsv%dw#X%d#X#Y4f#Y~%dZ=`R|R!OWOr%dsv%dw~%dZ=rU`PdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k_>_UZTdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$kZ>xWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a?b!a~$kZ?kU{PdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$kZ@UWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_#P$k#P#Q@n#Q~$kZ@uWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!aA_!a~$kZAhU!QPdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/xml';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\n\nfunction tagName(doc, tag) {\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction elementName(doc, tree) {\n    let tag = tree && tree.firstChild;\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\n}\nfunction attrName(doc, tag, pos) {\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\n    let name = attr && attr.getChild(\"AttributeName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction findParentElement(tree) {\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\")\n            return cur;\n    return null;\n}\nfunction findLocation(state, pos) {\n    var _a;\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\n            inTag = cur;\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\n        let elt = inTag.parent;\n        if (at.name == \"TagName\")\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\n                ? { type: \"closeTag\", from: at.from, context: elt }\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\n        if (at.name == \"AttributeName\")\n            return { type: \"attrName\", from: at.from, context: inTag };\n        if (at.name == \"AttributeValue\")\n            return { type: \"attrValue\", from: at.from, context: inTag };\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\n            return { type: \"closeTag\", from: pos, context: elt };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\n            return { type: \"attrValue\", from: pos, context: inTag };\n        if (before)\n            return { type: \"attrName\", from: pos, context: inTag };\n        return null;\n    }\n    else if (at.name == \"StartCloseTag\") {\n        return { type: \"closeTag\", from: pos, context: at.parent };\n    }\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\n        at = at.parent;\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\n    return null;\n}\nclass Element {\n    constructor(spec, attrs, attrValues) {\n        this.attrs = attrs;\n        this.attrValues = attrValues;\n        this.children = [];\n        this.name = spec.name;\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\n    }\n}\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction attrCompletion(spec) {\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\n}\nfunction valueCompletion(spec) {\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\n        : /^\"/.test(spec.label) ? spec\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\n}\nfunction completeFromSchema(eltSpecs, attrSpecs) {\n    let allAttrs = [], globalAttrs = [];\n    let attrValues = Object.create(null);\n    for (let s of attrSpecs) {\n        let completion = attrCompletion(s);\n        allAttrs.push(completion);\n        if (s.global)\n            globalAttrs.push(completion);\n        if (s.values)\n            attrValues[s.name] = s.values.map(valueCompletion);\n    }\n    let allElements = [], topElements = [];\n    let byName = Object.create(null);\n    for (let s of eltSpecs) {\n        let attrs = globalAttrs, attrVals = attrValues;\n        if (s.attributes)\n            attrs = attrs.concat(s.attributes.map(s => {\n                if (typeof s == \"string\")\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\n                if (s.values) {\n                    if (attrVals == attrValues)\n                        attrVals = Object.create(attrVals);\n                    attrVals[s.name] = s.values.map(valueCompletion);\n                }\n                return attrCompletion(s);\n            }));\n        let elt = new Element(s, attrs, attrVals);\n        byName[elt.name] = elt;\n        allElements.push(elt);\n        if (s.top)\n            topElements.push(elt);\n    }\n    if (!topElements.length)\n        topElements = allElements;\n    for (let i = 0; i < allElements.length; i++) {\n        let s = eltSpecs[i], elt = allElements[i];\n        if (s.children) {\n            for (let ch of s.children)\n                if (byName[ch])\n                    elt.children.push(byName[ch]);\n        }\n        else {\n            elt.children = allElements;\n        }\n    }\n    return cx => {\n        var _a;\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\n            return null;\n        let { type, from, context } = loc;\n        if (type == \"openTag\") {\n            let children = topElements;\n            let parentName = elementName(doc, context);\n            if (parentName) {\n                let parent = byName[parentName];\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\n            }\n            return {\n                from,\n                options: children.map(ch => ch.completion),\n                span: Identifier\n            };\n        }\n        else if (type == \"closeTag\") {\n            let parentName = elementName(doc, context);\n            return parentName ? {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\n                span: Identifier\n            } : null;\n        }\n        else if (type == \"attrName\") {\n            let parent = byName[tagName(doc, context)];\n            return {\n                from,\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\n                span: Identifier\n            };\n        }\n        else if (type == \"attrValue\") {\n            let attr = attrName(doc, context, from);\n            if (!attr)\n                return null;\n            let parent = byName[tagName(doc, context)];\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\n            if (!values || !values.length)\n                return null;\n            return {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\n                options: values,\n                span: /^\"[^\"]*\"?$/\n            };\n        }\n        else if (type == \"tag\") {\n            let parentName = elementName(doc, context), parent = byName[parentName];\n            let closing = [], last = context && context.lastChild;\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\n                let openTag = context.firstChild;\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\n                    options = options.concat(parent.text);\n            }\n            return {\n                from,\n                options,\n                span: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\n            };\n        }\n        else {\n            return null;\n        }\n    };\n}\n\n/**\nA language provider based on the [Lezer XML\nparser](https://github.com/lezer-parser/xml), extended with\nhighlighting and indentation information.\n*/\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(subtree) {\n                    let first = subtree.firstChild, last = subtree.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\n                }\n            }),\n            /*@__PURE__*/styleTags({\n                Text: tags.content,\n                \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n                TagName: tags.tagName,\n                \"MismatchedCloseTag/Tagname\": [tags.tagName, tags.invalid],\n                AttributeName: tags.attributeName,\n                AttributeValue: tags.attributeValue,\n                Is: tags.definitionOperator,\n                \"EntityReference CharacterReference\": tags.character,\n                Comment: tags.blockComment,\n                ProcessingInst: tags.processingInstruction,\n                DoctypeDecl: tags.documentMeta,\n                Cdata: /*@__PURE__*/tags.special(tags.string)\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/$/\n    }\n});\n/**\nXML language support. Includes schema-based autocompletion when\nconfigured.\n*/\nfunction xml(conf = {}) {\n    return new LanguageSupport(xmlLanguage, xmlLanguage.data.of({\n        autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\n    }));\n}\n\nexport { completeFromSchema, xml, xmlLanguage };\n"]}