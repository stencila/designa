{"version":3,"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"names":["getDynamicImportFunction","namespace","concat","replace","patchBrowser","patchCloneNodeFix","H","prototype","scriptElm","Array","from","doc","querySelectorAll","find","s","RegExp","NAMESPACE","test","src","getAttribute","opts","history","scrollRestoration","then","resourcesUrl","URL","win","location","href","patchDynamicImport","customElements","module","import","promiseResolve","base","orgScriptElm","importFunctionName","Function","Math","random","e","moduleMap_1","Map","url","mod","get","script_1","createElement","type","crossOrigin","createObjectURL","Blob","Promise","resolve","onload","m","remove","set","head","appendChild","HTMLElementPrototype","nativeCloneNodeFn","cloneNode","deep","this","nodeName","call","clonedNode","srcChildNodes","childNodes","i","length","nodeType","options","bootstrapLazy","text","autofocus","programmingLanguage","languageCapabilities","executableLanguages","isCodeVisible","executeHandler","contentChangeHandler","executeStatus","compileDigest","executeRequired","executeDigest","executeEnded","executeDuration","keymap","isExecutable","shiftIsPressed","isStacked","getContents","getTextContents","execute","getRef","readOnly","codeExpression","hover","mode","sourceUrl","position","altIsPressed","nodeId","label","nodeKind","executeAuto","lineWrapping","lineNumbers","foldGutter","error","level","hasStackTrace","stackTraceIsOpen","autoFocus","inputmode","name","hideLabel","inline","placeholder","iconStart","required","value","tabs","activeTabIndex","group","routeViewsUpdated","scrollTopOffset","image","data","layout","config","plotIsRendered","spec","isEmpty","validator","paramName","graph","actions","hasSecondaryActions","isCollapsed","width","isAnimating","open","isOpen","isSelected","color","contents","activeLanguage","setContents","getState","setState","setStateFromString","__presenceKey","descendants","observe","registerChild","unregisterChild","exit","enter","icon","iconStyle","iconUrl","rel","target","ariaLabel","size","minimal","isSecondary","buttonType","disabled","iconOnly","isLoading","fill","tooltip","dataEl","dismissable","duration","role","divider","autoClose","autoOpen","menuPosition"],"mappings":"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","sourcesContent":["/*\n Stencil Client Patch Browser v2.14.2 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","import { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"]}