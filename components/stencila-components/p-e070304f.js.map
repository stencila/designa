{"version":3,"sources":["node_modules/animate-presence/dist/collection/utils/index.js"],"names":["presence","element","hooks","afterSelf","Promise","async","resolve","_a","dataset","hold","window","mo","MutationObserver","record","target","observe","attributeFilter","attributes","getAnimations","all","map","anim","finished","then","animationName","animationDuration","transitionDuration","getComputedStyle","listen","name","addEventListener","onEnd","event","removeEventListener","this","kebab","str","replace","toLowerCase","setCustomProperties","el","props","customProps","convertToCustomProperties","key","value","Object","entries","style","setProperty","o","prefix","result","toString","Array","isArray","endsWith","filter","Boolean","join","isHTMLElement","node","nodeType","ELEMENT_NODE","tagName","hasData","closest","selector","base","closestFrom","document","found","getRootNode","host","e","getTopLevelChildren","from","querySelectorAll","nested","includes","exitChildren","exit","enterChildren","enter","injectGlobalStyle","ss","head","querySelector","createElement","apGlobal","textContent","appendChild"],"mappings":"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","sourcesContent":["export * from './presence-handler';\r\nexport const nextTick = /*@__PURE__*/ (cb) => Promise.resolve().then(cb);\r\nexport const presence = (element, hooks = {}) => {\r\n    const { afterSelf } = hooks;\r\n    return new Promise(async (resolve) => {\r\n        var _a;\r\n        if (typeof element.dataset.hold !== 'undefined' &&\r\n            'MutationObserver' in window) {\r\n            const mo = new MutationObserver(([record]) => {\r\n                var _a;\r\n                if (typeof record.target.dataset.hold === 'undefined') {\r\n                    (_a = afterSelf) === null || _a === void 0 ? void 0 : _a();\r\n                    resolve();\r\n                }\r\n            });\r\n            mo.observe(element, {\r\n                attributeFilter: ['data-hold'],\r\n                attributes: true,\r\n            });\r\n            return;\r\n        }\r\n        // If WAAPI getAnimations exists, use that\r\n        if (typeof element.getAnimations !== 'undefined') {\r\n            Promise.all(element.getAnimations().map(anim => anim.finished)).then(() => {\r\n                var _a;\r\n                (_a = afterSelf) === null || _a === void 0 ? void 0 : _a();\r\n                resolve();\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            // Otherwise grab the computed style to check what listeners to attach\r\n            // or bail out if there aren't any animations/transitions set\r\n            const { animationName, animationDuration, transitionDuration, } = window.getComputedStyle(element);\r\n            if (animationName !== 'none' && animationDuration !== '0s') {\r\n                listen('animation');\r\n            }\r\n            else if (transitionDuration !== '0s') {\r\n                listen('transition');\r\n            }\r\n            else {\r\n                (_a = afterSelf) === null || _a === void 0 ? void 0 : _a();\r\n                resolve();\r\n            }\r\n            // }\r\n            function listen(name) {\r\n                element.addEventListener(`${name}end`, onEnd(name));\r\n            }\r\n            function onEnd(name) {\r\n                return function (event) {\r\n                    var _a;\r\n                    if (event.target !== element)\r\n                        return;\r\n                    element.removeEventListener(`${name}end`, this);\r\n                    (_a = afterSelf) === null || _a === void 0 ? void 0 : _a();\r\n                    resolve();\r\n                    return;\r\n                };\r\n            }\r\n        }\r\n    });\r\n};\r\nconst kebab = (str) => str.replace(/([A-Z])/g, `-$1`).toLowerCase();\r\nexport const setCustomProperties = (el, props) => {\r\n    const customProps = convertToCustomProperties(props);\r\n    for (const [key, value] of Object.entries(customProps)) {\r\n        el.style.setProperty(key, value);\r\n    }\r\n};\r\nconst convertToCustomProperties = (o, prefix = '--', result = {}) => {\r\n    if (o == null)\r\n        return result;\r\n    switch (typeof o) {\r\n        case 'string': {\r\n            result[kebab(prefix)] = o;\r\n            return result;\r\n        }\r\n        case 'number': {\r\n            result[kebab(prefix)] = o.toString(10);\r\n            return result;\r\n        }\r\n        case 'boolean': {\r\n            result[kebab(prefix)] = o ? `1` : `0`;\r\n            return result;\r\n        }\r\n        default:\r\n            break;\r\n    }\r\n    if (Array.isArray(o) || typeof o === 'object') {\r\n        for (let [key, value] of Object.entries(o)) {\r\n            const name = [prefix, !prefix.endsWith('-') && '-', key]\r\n                .filter(Boolean)\r\n                .join('');\r\n            convertToCustomProperties(value, name, result);\r\n        }\r\n        return result;\r\n    }\r\n    return result;\r\n};\r\nexport const isHTMLElement = (node) => node &&\r\n    node.nodeType === node.ELEMENT_NODE &&\r\n    typeof node.tagName !== 'undefined';\r\nexport const hasData = (el, key) => typeof el.dataset[key] !== 'undefined';\r\nexport function closest(selector, base = this) {\r\n    try {\r\n        function closestFrom(el) {\r\n            if (!el || el === document || el === window)\r\n                return null;\r\n            let found = el.closest(selector);\r\n            return found\r\n                ? found\r\n                : closestFrom(el.getRootNode().host);\r\n        }\r\n        return closestFrom(base);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\nexport const getTopLevelChildren = (el) => {\r\n    const all = Array.from(el.querySelectorAll('animate-presence'));\r\n    const nested = Array.from(el.querySelectorAll(':scope animate-presence animate-presence'));\r\n    return all.filter(el => !nested.includes(el));\r\n};\r\nexport const exitChildren = async (el) => {\r\n    return Promise.all(getTopLevelChildren(el).map((el) => el.exit()));\r\n};\r\nexport const enterChildren = async (el) => {\r\n    return Promise.all(getTopLevelChildren(el).map((el) => el.enter()));\r\n};\r\nexport const injectGlobalStyle = () => {\r\n    let ss = document.head.querySelector('[data-ap-global]');\r\n    if (ss)\r\n        return;\r\n    ss = document.createElement('style');\r\n    ss.dataset.apGlobal = '';\r\n    ss.textContent = `animate-presence>[data-enter][style*=\"--i:\"],animate-presence>[data-exit][style*=\"--i:\"]{animation-fill-mode:both;}`;\r\n    document.head.appendChild(ss);\r\n};\r\n"]}