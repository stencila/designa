{"version":3,"sources":["src/components/menu/menu.css?tag=stencila-menu&mode=default&encapsulation=scoped","src/components/menu/menu.material.css?tag=stencila-menu&mode=material&encapsulation=scoped","src/components/menu/menu.tsx"],"names":["defaultMenuCss","menuMaterialCss","menuIds","Menu","hostRef","_this","this","popperRef","isOpen","autoClose","autoOpen","menuPosition","initMenu","menuEl","createPopper","el","placement","strategy","modifiers","name","computeMenuLocation","update","catch","err","console","error","toggleMenu","e","preventDefault","stopPropagation","openMenu","closeMenu","closeOnBlur","contains","relatedTarget","autoCloseTimeoutRef","window","setTimeout","clearTimeout","menuId","concat","prototype","componentWillLoad","addEventListener","disconnectedCallback","removeEventListener","destroy","render","h","Host","onClick","aria-controls","aria-expanded","role","aria-hidden","aria-orientation","tabindex","id","ref"],"mappings":"uIAAA,IAAMA,eAAiB,00CCAvB,IAAMC,gBAAkB,+1BCGxB,IAAIC,QAAU,MAUDC,KAAI,WARjB,SAAAA,EAAAC,GAAA,IAAAC,EAAAC,8BAYUA,KAAAC,UAA6B,KAS9BD,KAAAE,OAAS,MAMTF,KAAAG,UAAY,KAMZH,KAAAI,SAAW,MAMXJ,KAAAK,aAA0B,cAEjCL,KAAAM,SAAW,WACT,GAAIP,EAAKQ,OAAQ,CACfR,EAAKE,UAAYO,aAAaT,EAAKU,GAAIV,EAAKQ,OAAQ,CAClDG,UAAWX,EAAKM,aAChBM,SAAU,QACVC,UAAW,CAAC,CAAEC,KAAM,wBAKlBb,KAAAc,oBAAsB,WAC5Bf,EAAKE,UACDF,EAAKE,UAAUc,SAASC,OAAM,SAACC,GAC7BC,QAAQC,MAAM,iCAAkCF,MAElDlB,EAAKO,YAGHN,KAAAoB,WAAa,SAACC,GACpBA,EAAEC,iBACF,GAAIvB,EAAKI,UAAW,CAClBkB,EAAEE,kBAEJxB,EAAKG,OAAUH,EAAKG,OAAS,MAASH,EAAKyB,YAGrCxB,KAAAwB,SAAW,WACjBzB,EAAKe,sBACLf,EAAKG,OAAS,MAGRF,KAAAyB,UAAY,WAClB,GAAI1B,EAAKI,UAAW,CAClBJ,EAAKG,OAAS,QAKVF,KAAA0B,YAAc,SAACL,GACrB,GAAItB,EAAKG,SAAWH,EAAKU,GAAGkB,SAASN,EAAEO,eAAwB,CAC7D7B,EAAK8B,oBAAsBC,OAAOC,WAAWhC,EAAK0B,UAAW,OAIzDzB,KAAAgC,aAAe,WACrBF,OAAOE,aAAajC,EAAK8B,sBAGnB7B,KAAAiC,OAAS,iBAAAC,OAAiBtC,WAElCC,EAAAsC,UAAAC,kBAAA,WACE,GAAIpC,KAAKG,UAAW,CAClBH,KAAKS,GAAG4B,iBAAiB,WAAYrC,KAAK0B,aAC1C1B,KAAKS,GAAG4B,iBAAiB,aAAcrC,KAAKgC,cAG9C,GAAIhC,KAAKI,SAAU,CACjBJ,KAAKS,GAAG4B,iBAAiB,aAAcrC,KAAKwB,UAC5CxB,KAAKS,GAAG4B,iBAAiB,QAASrC,KAAKwB,YAIpC3B,EAAAsC,UAAAG,qBAAA,WACLtC,KAAKS,GAAG8B,oBAAoB,WAAYvC,KAAK0B,aAC7C1B,KAAKS,GAAG8B,oBAAoB,aAAcvC,KAAKgC,cAC/ChC,KAAKS,GAAG8B,oBAAoB,aAAcvC,KAAKwB,UAC/CxB,KAAKS,GAAG8B,oBAAoB,QAASvC,KAAKwB,UAE1C,GAAIxB,KAAKC,UAAW,CAClBD,KAAKC,UAAUuC,UACfxC,KAAKC,UAAY,OAIdJ,EAAAsC,UAAAM,OAAA,WAAA,IAAA1C,EAAAC,KACL,OACE0C,EAACC,KAAI,KACHD,EAAA,OAAA,CACEE,QAAS5C,KAAKoB,WAAUyB,gBACT7C,KAAKiC,OAAMa,gBACX9C,KAAKE,OAAS,OAAS,SAEtCwC,EAAA,OAAA,CAAM7B,KAAK,YAGb6B,EAAA,KAAA,CACEK,KAAK,OAAMC,eACGhD,KAAKE,OAAM+C,mBACR,WACjBC,SAAS,KACTC,GAAInD,KAAKiC,OACTW,QAAS5C,KAAKyB,UACd2B,IAAK,SAAC3C,GAAE,OAAMV,EAAKQ,OAASE,IAE5BiC,EAAA,OAAA,uIA/HO","sourcesContent":["@import '~@stencila/style-stencila/dist/atoms/menu.css';\n","@import '~@stencila/style-material/dist/atoms/menu.css';\n","import { Component, Element, h, Host, Prop } from '@stencil/core'\nimport { createPopper, Instance, Placement } from '@popperjs/core'\n\nlet menuIds = 0\n\n@Component({\n  tag: 'stencila-menu',\n  styleUrls: {\n    default: 'menu.css',\n    material: 'menu.material.css',\n  },\n  scoped: true,\n})\nexport class Menu {\n  @Element() private el: HTMLStencilaCodeFragmentElement\n\n  private menuEl: HTMLUListElement | undefined\n  private popperRef: Instance | null = null\n\n  /**\n   * Determines whether the Menu is shown or not\n   */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  })\n  public isOpen = false\n\n  /**\n   * Close the menu when losing focus\n   */\n  @Prop()\n  public autoClose = true\n\n  /**\n   * Open the menu on hover or when gaining focus\n   */\n  @Prop()\n  public autoOpen = false\n\n  /**\n   * The position relative to the toggle button where the menu should appear.\n   */\n  @Prop()\n  public menuPosition: Placement = 'right-start'\n\n  initMenu = () => {\n    if (this.menuEl) {\n      this.popperRef = createPopper(this.el, this.menuEl, {\n        placement: this.menuPosition,\n        strategy: 'fixed',\n        modifiers: [{ name: 'preventOverflow' }],\n      })\n    }\n  }\n\n  private computeMenuLocation = () => {\n    this.popperRef\n      ? this.popperRef.update().catch((err) => {\n          console.error('Could not update menu position', err)\n        })\n      : this.initMenu()\n  }\n\n  private toggleMenu = (e: MouseEvent) => {\n    e.preventDefault()\n    if (this.autoClose) {\n      e.stopPropagation()\n    }\n    this.isOpen ? (this.isOpen = false) : this.openMenu()\n  }\n\n  private openMenu = () => {\n    this.computeMenuLocation()\n    this.isOpen = true\n  }\n\n  private closeMenu = () => {\n    if (this.autoClose) {\n      this.isOpen = false\n    }\n  }\n\n  private autoCloseTimeoutRef: number\n  private closeOnBlur = (e: MouseEvent) => {\n    if (this.isOpen && !this.el.contains(e.relatedTarget as Node)) {\n      this.autoCloseTimeoutRef = window.setTimeout(this.closeMenu, 250)\n    }\n  }\n\n  private clearTimeout = () => {\n    window.clearTimeout(this.autoCloseTimeoutRef)\n  }\n\n  private menuId = `stencila-menu-${menuIds++}`\n\n  componentWillLoad() {\n    if (this.autoClose) {\n      this.el.addEventListener('mouseout', this.closeOnBlur)\n      this.el.addEventListener('mouseenter', this.clearTimeout)\n    }\n\n    if (this.autoOpen) {\n      this.el.addEventListener('mouseenter', this.openMenu)\n      this.el.addEventListener('focus', this.openMenu)\n    }\n  }\n\n  public disconnectedCallback(): void {\n    this.el.removeEventListener('mouseout', this.closeOnBlur)\n    this.el.removeEventListener('mouseenter', this.clearTimeout)\n    this.el.removeEventListener('mouseenter', this.openMenu)\n    this.el.removeEventListener('focus', this.openMenu)\n\n    if (this.popperRef) {\n      this.popperRef.destroy()\n      this.popperRef = null\n    }\n  }\n\n  public render() {\n    return (\n      <Host>\n        <span\n          onClick={this.toggleMenu}\n          aria-controls={this.menuId}\n          aria-expanded={this.isOpen ? 'true' : 'false'}\n        >\n          <slot name=\"toggle\" />\n        </span>\n\n        <ul\n          role=\"menu\"\n          aria-hidden={!this.isOpen}\n          aria-orientation=\"vertical\"\n          tabindex=\"-1\"\n          id={this.menuId}\n          onClick={this.closeMenu}\n          ref={(el) => (this.menuEl = el)}\n        >\n          <slot />\n        </ul>\n      </Host>\n    )\n  }\n}\n"]}