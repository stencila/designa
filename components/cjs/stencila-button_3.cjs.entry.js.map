{"file":"stencila-button.stencila-tooltip.stencila-tooltip-element.entry.cjs.js","mappings":"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","names":["h","Host","createPopper"],"sources":["./src/components/button/button.css?tag=stencila-button&mode=default&encapsulation=scoped","./src/components/button/button.material.css?tag=stencila-button&mode=material&encapsulation=scoped","./src/components/button/button.tsx","./src/components/tooltip/tooltip.css?tag=stencila-tooltip&mode=default&encapsulation=scoped","./src/components/tooltip/tooltip.css?tag=stencila-tooltip&mode=material&encapsulation=scoped","./src/components/tooltip/tooltip.tsx","./src/components/tooltipElement/tooltipElement.css?tag=stencila-tooltip-element&mode=default&encapsulation=scoped","./src/components/tooltipElement/tooltipElement.material.css?tag=stencila-tooltip-element&mode=material&encapsulation=scoped","./src/components/tooltipElement/tooltipElement.tsx"],"sourcesContent":["@import '~@stencila/style-stencila/dist/atoms/button/index.css';\n","@import '~@stencila/style-material/dist/atoms/button/index.css';\n","import { Component, h, Host, Prop } from '@stencil/core'\nimport { Colors } from '../../types'\nimport { IconNames } from '../icon/iconNames'\n\n@Component({\n  tag: 'stencila-button',\n  styleUrls: {\n    default: 'button.css',\n    material: 'button.material.css',\n  },\n  scoped: true,\n})\nexport class Button {\n  /**\n   * If an `href` property is provided, button will be rendered using an `<a>` anchor tag.\n   */\n  @Prop() public href?: string\n\n  /**\n   * Relationship of the link\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#rel\n   * Only applied if `href` prop is also set.\n   */\n  @Prop() public rel?: string\n\n  /**\n   * Determines where to display the linked URL, options correspond to HTML Anchor `target` attribute.\n   * Only applies if the button is an anchor link.\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target\n   */\n  @Prop() public target?: HTMLAnchorElement['target']\n\n  /**\n   * Screen-reader accessible label to read out.\n   */\n  @Prop() public ariaLabel: string\n\n  /**\n   * The color of the button\n   */\n  @Prop() public color: Colors = 'primary'\n\n  /**\n   * The overall size of the Button.\n   */\n  @Prop() public size: 'xsmall' | 'small' | 'default' | 'large' = 'default'\n\n  /**\n   * Renders the button without initial background color or border.\n   */\n  @Prop() public minimal = false\n\n  /**\n   * Renders the button using a secondory, and usually less visually prominent, Button CSS stylesheet.\n   */\n  @Prop() public isSecondary = false\n\n  /**\n   * The type of button to render, options correspond to HTML Button `type` attribute.\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\n   * Only applies if the button is not an anchor link.\n   */\n  @Prop() public buttonType: 'button' | 'submit' | 'reset'\n\n  /**\n   * If true, prevents the user from interacting with the button.\n   * Note: Not all browser prevent the click handler from firing on disabled buttons.\n   */\n  @Prop() public disabled = false\n\n  /**\n   * Name of the icon to render inside the button\n   * @see Icon component for possible values\n   */\n  @Prop() public icon?: HTMLElement | IconNames\n\n  /**\n   * If true, removes extra padding from Icon inside the button\n   * TODO: See if we can automatically infer removal of padding through CSS\n   */\n  @Prop() public iconOnly = false\n\n  /**\n   * If true, shows a loading spinner icon and sets a `disabled` attribute on the button.\n   * Note: Not all browser prevent the click handler from firing on disabled buttons.\n   */\n  @Prop() public isLoading = false\n\n  /**\n   * If true, the button will take up the full width of the parent container\n   */\n  @Prop() public fill = false\n\n  /**\n   * An optional help text to display for button focus and hover states.\n   */\n  @Prop() public tooltip?: string\n\n  /**\n   * An optional data attribute set on the button element for easier targeting using JavaScript.\n   */\n  @Prop() public dataEl?: string\n\n  private generateButton = (): HTMLButtonElement | HTMLAnchorElement => {\n    const TagType = this.href === undefined ? 'button' : 'a'\n    const elAttrs =\n      TagType === 'button'\n        ? { type: this.buttonType }\n        : { href: this.href, rel: this.rel, target: this.target }\n\n    const extraAttrs: Record<string, string> = {}\n    if (this.dataEl !== undefined) {\n      extraAttrs['data-el'] = this.dataEl\n    }\n\n    return (\n      <TagType\n        class={{\n          button: this.href !== undefined,\n          fill: this.fill,\n          iconOnly: this.iconOnly,\n          minimal: this.minimal,\n          secondary: this.isSecondary,\n          [this.size]: this.size !== undefined,\n          [`color-${this.color}`]: true,\n        }}\n        {...elAttrs}\n        {...extraAttrs}\n        disabled={this.isLoading || this.disabled || false}\n        aria-label={this.ariaLabel ?? this.tooltip}\n      >\n        {typeof this.icon === 'string' ? (\n          <stencila-icon\n            icon={this.isLoading ? 'loader-2' : this.icon}\n            class={{ spin: this.isLoading }}\n          ></stencila-icon>\n        ) : (\n          this.icon\n        )}\n        <slot name=\"icon\" />\n\n        <span class=\"label\">\n          <slot />\n        </span>\n      </TagType>\n    )\n  }\n\n  public render() {\n    return (\n      <Host size={this.size} icon={this.icon}>\n        {this.tooltip === undefined ? (\n          this.generateButton()\n        ) : (\n          <stencila-tooltip text={this.tooltip}>\n            {this.generateButton()}\n          </stencila-tooltip>\n        )}\n      </Host>\n    )\n  }\n}\n","","","import { createPopper, Instance, Placement } from '@popperjs/core'\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core'\n\n@Component({\n  tag: 'stencila-tooltip',\n  styleUrls: {\n    default: 'tooltip.css',\n    material: 'tooltip.css',\n  },\n  scoped: true,\n})\nexport class Tooltip implements ComponentInterface {\n  @Element() el: HTMLStencilaTooltipElement\n\n  /**\n   * The text content of the Tooltip.\n   */\n  @Prop() text!: string\n\n  /**\n   * The placement of the tooltip\n   */\n  @Prop()\n  position: Placement = 'bottom'\n\n  private tooltipRef?: HTMLSpanElement\n  private popperRef: Instance | null = null\n\n  private showTooltip = (): void => {\n    // TODO: Use Schema helpers once package is updated: https://github.com/stencila/schema/issues/178\n    const target =\n      document.querySelector('[data-itemscope=\"root\"]') ?? document.body\n\n    if (this.tooltipRef === undefined) {\n      this.tooltipRef =\n        document.querySelector('stencila-tooltip-element') ??\n        document.createElement('stencila-tooltip-element')\n    }\n\n    this.tooltipRef.innerText = this.text\n    target.appendChild(this.tooltipRef)\n\n    this.popperRef = createPopper(this.el, this.tooltipRef, {\n      placement: this.position,\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [0, 8],\n          },\n        },\n        {\n          name: 'preventOverflow',\n        },\n      ],\n    })\n\n    window.addEventListener('mousemove', this.onMouseMoveHandler)\n  }\n\n  private onMouseMoveHandler = (e: MouseEvent): void => {\n    if (!this.el.contains(e.target as Node)) {\n      this.destroyTooltip()\n    }\n  }\n\n  private onMouseOutHandler = (e: MouseEvent): void => {\n    if (e.relatedTarget && !this.el.contains(e.relatedTarget as Node)) {\n      this.destroyTooltip()\n    }\n  }\n\n  private destroyTooltip = (): void => {\n    if (this.tooltipRef) {\n      this.tooltipRef.remove()\n    }\n\n    if (this.popperRef) {\n      this.popperRef.destroy()\n      this.popperRef = null\n    }\n\n    window.removeEventListener('mousemove', this.onMouseMoveHandler)\n  }\n\n  private loadComponent = (): void => {\n    this.el.addEventListener('focusin', this.showTooltip)\n    this.el.addEventListener('focusout', this.destroyTooltip)\n\n    this.el.addEventListener('mouseenter', this.showTooltip)\n    this.el.addEventListener('mouseout', this.onMouseOutHandler)\n  }\n\n  private unloadComponent = (): void => {\n    this.el.removeEventListener('focusin', this.showTooltip)\n    this.el.removeEventListener('focusout', this.destroyTooltip)\n\n    this.el.removeEventListener('mouseenter', this.showTooltip)\n    this.el.removeEventListener('mouseout', this.onMouseOutHandler)\n    window.removeEventListener('mousemove', this.onMouseMoveHandler)\n  }\n\n  public componentDidLoad(): void {\n    this.loadComponent()\n  }\n\n  public disconnectedCallback(): void {\n    this.unloadComponent()\n    this.destroyTooltip()\n  }\n\n  @Watch('text')\n  watchHandler(newText: string): void {\n    if (this.tooltipRef !== undefined) {\n      this.tooltipRef.innerText = newText\n\n      this.popperRef\n        ?.update()\n        .catch((err) => console.log('could not update Tooltip position\\n', err))\n    }\n  }\n\n  public render(): HTMLElement {\n    return (\n      <Host>\n        <slot />\n        <slot name=\"content\" />\n      </Host>\n    )\n  }\n}\n","@import '~@stencila/style-stencila/dist/atoms/tooltip.css';\n","@import '~@stencila/style-material/dist/atoms/tooltip.css';\n","import { Component, h, Host } from '@stencil/core'\n\n@Component({\n  tag: 'stencila-tooltip-element',\n  styleUrls: {\n    default: 'tooltipElement.css',\n    material: 'tooltipElement.material.css',\n  },\n  scoped: true,\n})\nexport class TooltipElement {\n  public render() {\n    return (\n      <Host>\n        <slot />\n      </Host>\n    )\n  }\n}\n"],"version":3}