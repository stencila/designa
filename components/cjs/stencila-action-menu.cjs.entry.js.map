{"file":"stencila-action-menu.entry.cjs.js","mappings":"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","names":["h"],"sources":["./src/components/actionMenu/actionMenu.css?tag=stencila-action-menu&mode=default&encapsulation=scoped","./src/components/actionMenu/actionMenu.css?tag=stencila-action-menu&mode=material&encapsulation=scoped","./src/components/actionMenu/actionMenu.tsx"],"sourcesContent":["@import '~@stencila/style-stencila/dist/molecules/actionMenu.css';\n","@import '~@stencila/style-stencila/dist/molecules/actionMenu.css';\n","import { Component, Element, h, Prop, State } from '@stencil/core'\n\nconst slots = {\n  default: '',\n  persistentActions: 'persistentActions',\n}\n\n@Component({\n  tag: 'stencila-action-menu',\n  styleUrls: {\n    default: 'actionMenu.css',\n    material: 'actionMenu.css',\n  },\n  scoped: true,\n})\nexport class ActionMenu {\n  @Element() private el: HTMLStencilaActionMenuElement\n\n  /**\n   * List of buttons to include in Action Menu.\n   */\n  @Prop()\n  public actions: HTMLButtonElement[]\n\n  @State() private hasSecondaryActions: boolean\n\n  @State() private isCollapsed = false\n\n  private toggleActionMenu = () => (this.isCollapsed = !this.isCollapsed)\n\n  @State() private width = 'auto'\n  @State() private isAnimating = false\n\n  private actionContainerRef: HTMLSpanElement | undefined\n  private isTransitioning = false\n\n  private calculateWidth = () => {\n    if (this.actionContainerRef && this.isTransitioning === false) {\n      this.width = 'auto'\n\n      const width = this.actionContainerRef.getBoundingClientRect().width\n\n      this.width = `${width}px`\n    }\n  }\n\n  private observer = new window.MutationObserver(this.calculateWidth)\n\n  private checkForSecondaryActions = (): boolean => {\n    this.hasSecondaryActions = Array.from(this.el.children).some((child) => {\n      return child.slot === ''\n    })\n    return this.hasSecondaryActions\n  }\n\n  protected componentWillLoad(): void {\n    this.checkForSecondaryActions()\n  }\n\n  protected componentDidLoad(): void {\n    if (this.actionContainerRef) {\n      window.requestAnimationFrame(() => {\n        if (this.actionContainerRef && this.hasSecondaryActions) {\n          this.actionContainerRef.addEventListener(\n            'transitionstart',\n            () => (this.isTransitioning = true)\n          )\n\n          this.actionContainerRef.addEventListener(\n            'transitionend',\n            () => (this.isTransitioning = false)\n          )\n\n          this.observer.observe(this.el, {\n            characterData: true,\n            subtree: true,\n          })\n\n          this.calculateWidth()\n          this.isCollapsed = true\n        }\n      })\n    }\n  }\n\n  protected disconnectedCallback(): void {\n    this.observer.disconnect()\n  }\n\n  public render() {\n    if (this.el.children.length <= 0) return null\n\n    return (\n      <nav>\n        <span class=\"persistentActions\">\n          <slot name={slots.persistentActions} />\n        </span>\n\n        <span\n          class={{\n            secondaryActions: true,\n            hidden: !this.hasSecondaryActions,\n          }}\n        >\n          <stencila-button\n            onClick={this.toggleActionMenu}\n            icon=\"more\"\n            color=\"key\"\n            minimal={true}\n            size=\"xsmall\"\n            iconOnly={true}\n            ariaLabel=\"Toggle Action Menu\"\n          ></stencila-button>\n\n          <span\n            class={{\n              actionContainer: true,\n              isAnimating: this.isAnimating,\n              isCollapsed: this.isCollapsed,\n            }}\n            ref={(el) => (this.actionContainerRef = el)}\n            style={{ '--max-width': this.width }}\n          >\n            <slot />\n          </span>\n        </span>\n      </nav>\n    )\n  }\n}\n"],"version":3}