{"file":"animate-presence.entry.cjs.js","mappings":"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","names":["closest","injectGlobalStyle","setCustomProperties","presence","enterChildren","exitChildren","isHTMLElement","hasData","h","Host"],"sources":["./node_modules/animate-presence/dist/collection/components/animate-presence/animate-presence.js"],"sourcesContent":["import { h, Host } from \"@stencil/core\";\r\nimport { setCustomProperties, isHTMLElement, hasData, presence, closest, enterChildren, exitChildren, injectGlobalStyle, } from '../../utils';\r\nconst hold = (el) => async (cb) => {\r\n    el.dataset.hold = '';\r\n    await cb(el).then((r) => {\r\n        if (r && 'finished' in r) {\r\n            return r.finished;\r\n        }\r\n        return;\r\n    });\r\n    delete el.dataset.hold;\r\n};\r\nexport class AnimatePresence {\r\n    constructor() {\r\n        /** @internal */\r\n        this.__presenceKey = `animate-presence-${ids++}`;\r\n        /** @internal */\r\n        this.descendants = [];\r\n        this.getClosestParent = () => {\r\n            var _a;\r\n            const base = (_a = this.element.parentElement, (_a !== null && _a !== void 0 ? _a : this.element.getRootNode().host));\r\n            return closest(this.element.tagName, base);\r\n        };\r\n        this.willExit = false;\r\n        this.didExit = false;\r\n        this.willEnter = false;\r\n        this.didEnter = false;\r\n        this.handleMutation = this.handleMutation.bind(this);\r\n    }\r\n    observeChanged() {\r\n        if (this.observe) {\r\n            this.addMO();\r\n            this.mo.observe(this.element, {\r\n                childList: true,\r\n                attributes: true,\r\n                attributeFilter: ['data-key'],\r\n            });\r\n        }\r\n        else {\r\n            this.removeMO();\r\n        }\r\n    }\r\n    async componentWillLoad() {\r\n        var _a, _b;\r\n        injectGlobalStyle();\r\n        this.ancestor = this.getClosestParent();\r\n        if (typeof this.observe === 'undefined') {\r\n            this.observe = (_b = (_a = this.ancestor) === null || _a === void 0 ? void 0 : _a.observe, (_b !== null && _b !== void 0 ? _b : true));\r\n        }\r\n        Array.from(this.element.children).map((el, i) => {\r\n            setCustomProperties(el, { i });\r\n            el.style.setProperty('animation-play-state', 'paused');\r\n            el.dataset.enter = '';\r\n        });\r\n    }\r\n    async componentDidLoad() {\r\n        var _a;\r\n        this.observeChanged();\r\n        (_a = this.ancestor) === null || _a === void 0 ? void 0 : _a.registerChild(this.element);\r\n        if (!this.ancestor) {\r\n            this.enter();\r\n        }\r\n    }\r\n    async componentDidUnload() {\r\n        var _a;\r\n        this.removeMO();\r\n        (_a = this.ancestor) === null || _a === void 0 ? void 0 : _a.unregisterChild(this.__presenceKey);\r\n        this.descendants = [];\r\n    }\r\n    async enterNode(el, i = 0) {\r\n        delete el.dataset.exit;\r\n        const event = new CustomEvent('animatePresenceEnter', {\r\n            bubbles: true,\r\n            detail: {\r\n                i,\r\n                hold: hold(el),\r\n            },\r\n        });\r\n        el.dispatchEvent(event);\r\n        el.style.removeProperty('animation-play-state');\r\n        el.dataset.enter = '';\r\n        setCustomProperties(el, { i });\r\n        await presence(el, {\r\n            afterSelf: async () => {\r\n                delete el.dataset.initial;\r\n                delete el.dataset.enter;\r\n                el.style.removeProperty('--i');\r\n            },\r\n        });\r\n        return enterChildren(el);\r\n    }\r\n    async exitNode(el, method = 'remove', i = 0) {\r\n        await exitChildren(el);\r\n        delete el.dataset.willExit;\r\n        setCustomProperties(el, { i });\r\n        const event = new CustomEvent('animatePresenceExit', {\r\n            bubbles: true,\r\n            detail: {\r\n                i,\r\n                hold: hold(el),\r\n            },\r\n        });\r\n        el.dispatchEvent(event);\r\n        el.dataset.exit = '';\r\n        await presence(el, {\r\n            afterSelf: () => {\r\n                if (method === 'remove') {\r\n                    el.remove();\r\n                }\r\n                else if (method === 'hide') {\r\n                    el.style.setProperty('visibility', 'hidden');\r\n                }\r\n            },\r\n        });\r\n        return Promise.resolve();\r\n    }\r\n    async handleEnter(node, _record, i) {\r\n        if (!isHTMLElement(node))\r\n            return;\r\n        if (hasData(node, 'exit'))\r\n            return;\r\n        if (hasData(node, 'willExit')) {\r\n            return this.exitNode(node, 'remove', i);\r\n        }\r\n        else {\r\n            return this.enterNode(node, i);\r\n        }\r\n    }\r\n    async handleExit(node, record, i) {\r\n        if (!isHTMLElement(node))\r\n            return;\r\n        if (hasData(node, 'exit') || hasData(node, 'willExit')) {\r\n            return;\r\n        }\r\n        node.dataset.willExit = '';\r\n        setCustomProperties(node, { i });\r\n        if (isHTMLElement(record.previousSibling)) {\r\n            record.previousSibling.insertAdjacentElement('afterend', node);\r\n        }\r\n        else if (isHTMLElement(record.target)) {\r\n            record.target.prepend(node);\r\n        }\r\n    }\r\n    handleMutation(records) {\r\n        let i = 0;\r\n        for (const record of records.reverse()) {\r\n            if (record.addedNodes.length === 1) {\r\n                this.handleEnter(record.addedNodes[0], record, records.length - 1 - i);\r\n            }\r\n            if (record.removedNodes.length === 1) {\r\n                this.handleExit(record.removedNodes[0], record, i);\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n    addMO() {\r\n        if (!this.mo) {\r\n            if ('MutationObserver' in window) {\r\n                this.mo = new MutationObserver(this.handleMutation);\r\n                this.observeChanged();\r\n            }\r\n        }\r\n    }\r\n    removeMO() {\r\n        if (this.mo) {\r\n            this.mo.disconnect();\r\n            this.mo = undefined;\r\n        }\r\n    }\r\n    /** @internal Registers a child element across shadow boundaries */\r\n    async registerChild(el) {\r\n        const key = el.__presenceKey;\r\n        // Remove existing elements with same key to handle HMR\r\n        this.descendants = [\r\n            ...this.descendants.filter(element => element.__presenceKey !== key),\r\n            el,\r\n        ];\r\n        return;\r\n    }\r\n    /** @internal */\r\n    async unregisterChild(key) {\r\n        this.descendants = this.descendants.filter(el => el.__presenceKey !== key);\r\n        return;\r\n    }\r\n    animatePresenceExitCompleteHandler(event) {\r\n        event.stopPropagation();\r\n    }\r\n    /**\r\n     * Programmatically triggers an exit.\r\n     *\r\n     * Nested `<animate-presence>` children will be animated out from the bottom up, meaning that children elements trigger a parent's exit after their own exit finishes.\r\n     */\r\n    async exit() {\r\n        if (this.didExit || this.willExit)\r\n            return;\r\n        this.willExit = true;\r\n        await Promise.all(Array.from(this.element.children)\r\n            .reverse()\r\n            .map((el, i) => this.exitNode(el, 'hide', i)));\r\n        this.didExit = true;\r\n        this.willExit = false;\r\n        this.animatePresenceExitComplete.emit();\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Programmatically triggers an entrance.\r\n     *\r\n     * Nested `<animate-presence>` children will be animated in from the top down, meaning that parent elements trigger a child's entrance after their own entrance finishes.\r\n     */\r\n    async enter() {\r\n        this.didExit = false;\r\n        this.willExit = false;\r\n        if (this.didEnter || this.willEnter)\r\n            return;\r\n        this.willEnter = true;\r\n        await Promise.all(Array.from(this.element.children).map((el, i) => this.enterNode(el, i)));\r\n        await enterChildren(this.element);\r\n        this.didEnter = true;\r\n        this.willEnter = false;\r\n        return Promise.resolve();\r\n    }\r\n    render() {\r\n        return (h(Host, { style: { display: 'contents' } },\r\n            h(\"slot\", null)));\r\n    }\r\n    static get is() { return \"animate-presence\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"__presenceKey\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [{\r\n                        \"text\": undefined,\r\n                        \"name\": \"internal\"\r\n                    }],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"__presence-key\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"`animate-presence-${ids++}`\"\r\n        },\r\n        \"descendants\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"HTMLAnimatePresenceElement[]\",\r\n                \"resolved\": \"HTMLAnimatePresenceElement[]\",\r\n                \"references\": {\r\n                    \"HTMLAnimatePresenceElement\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [{\r\n                        \"text\": undefined,\r\n                        \"name\": \"internal\"\r\n                    }],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"[]\"\r\n        },\r\n        \"observe\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"If `true` (default), a MutationObserver will automatically be connected to enable animations when a child node enters/exits.\\n\\nIf you know the children are static (typical `animated-route-switch` use case), `false` may improve performance.\\n\\nNote: `<animate-presence>` elements which are children of a parent `<animate-presence>` element will inherit this value,\\n\\nwhich means MutationObservers can be disabled for the entire tree by setting `observe={false}` on the top-level element.\\n\\nHowever, directly set values always take precedence over inherited values.\"\r\n            },\r\n            \"attribute\": \"observe\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"animatePresenceExitComplete\",\r\n            \"name\": \"animatePresenceExitComplete\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Fires when all exiting nodes have completed animating out.\\n\\nTo simplify listener behavior, this event bubbles, but never beyond the closest `<animate-presence>` parent.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"void\",\r\n                \"resolved\": \"void\",\r\n                \"references\": {}\r\n            }\r\n        }, {\r\n            \"method\": \"animatePresenceEnter\",\r\n            \"name\": \"animatePresenceEnter\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Dispatched on a child when it enters. `event.target` is the entering child element.\\n\\nIt is recommended to use an animation handler created with `createPresenceHandler` for this event.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"{ i: number }\",\r\n                \"resolved\": \"{ i: number; }\",\r\n                \"references\": {}\r\n            }\r\n        }, {\r\n            \"method\": \"animatePresenceExit\",\r\n            \"name\": \"animatePresenceExit\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"Dispatched on a child when it exits. `event.target` is the exiting child element.\\n\\nIt is recommended to use an animation handler created with `createPresenceHandler` for this event.\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"{ i: number }\",\r\n                \"resolved\": \"{ i: number; }\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n    static get methods() { return {\r\n        \"registerChild\": {\r\n            \"complexType\": {\r\n                \"signature\": \"(el: HTMLAnimatePresenceElement) => Promise<void>\",\r\n                \"parameters\": [{\r\n                        \"tags\": [],\r\n                        \"text\": \"\"\r\n                    }],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    },\r\n                    \"HTMLAnimatePresenceElement\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"\",\r\n                \"tags\": [{\r\n                        \"name\": \"internal\",\r\n                        \"text\": \"Registers a child element across shadow boundaries\"\r\n                    }]\r\n            }\r\n        },\r\n        \"unregisterChild\": {\r\n            \"complexType\": {\r\n                \"signature\": \"(key: string) => Promise<void>\",\r\n                \"parameters\": [{\r\n                        \"tags\": [],\r\n                        \"text\": \"\"\r\n                    }],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"\",\r\n                \"tags\": [{\r\n                        \"name\": \"internal\",\r\n                        \"text\": undefined\r\n                    }]\r\n            }\r\n        },\r\n        \"exit\": {\r\n            \"complexType\": {\r\n                \"signature\": \"() => Promise<void>\",\r\n                \"parameters\": [],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    },\r\n                    \"HTMLElement\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"Programmatically triggers an exit.\\n\\nNested `<animate-presence>` children will be animated out from the bottom up, meaning that children elements trigger a parent's exit after their own exit finishes.\",\r\n                \"tags\": []\r\n            }\r\n        },\r\n        \"enter\": {\r\n            \"complexType\": {\r\n                \"signature\": \"() => Promise<void>\",\r\n                \"parameters\": [],\r\n                \"references\": {\r\n                    \"Promise\": {\r\n                        \"location\": \"global\"\r\n                    },\r\n                    \"HTMLElement\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                },\r\n                \"return\": \"Promise<void>\"\r\n            },\r\n            \"docs\": {\r\n                \"text\": \"Programmatically triggers an entrance.\\n\\nNested `<animate-presence>` children will be animated in from the top down, meaning that parent elements trigger a child's entrance after their own entrance finishes.\",\r\n                \"tags\": []\r\n            }\r\n        }\r\n    }; }\r\n    static get elementRef() { return \"element\"; }\r\n    static get watchers() { return [{\r\n            \"propName\": \"observe\",\r\n            \"methodName\": \"observeChanged\"\r\n        }]; }\r\n    static get listeners() { return [{\r\n            \"name\": \"animatePresenceExitComplete\",\r\n            \"method\": \"animatePresenceExitCompleteHandler\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }]; }\r\n}\r\nlet ids = 0;\r\n"],"version":3}