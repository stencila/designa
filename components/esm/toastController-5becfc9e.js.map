{"file":"toastController-5becfc9e.js","mappings":"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","names":["this","require$$0","mapAgeCleaner","mimicFn","mem"],"sources":["./node_modules/mimic-fn/index.js","./node_modules/p-defer/index.js","./node_modules/map-age-cleaner/dist/index.js","./node_modules/mem/dist/index.js","./src/components/toast/toastController.ts"],"sourcesContent":["'use strict';\n\nconst copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n//  - one its descriptors is changed\n//  - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nconst mimicFn = (to, from, {ignoreNonConfigurable = false} = {}) => {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n","'use strict';\nmodule.exports = () => {\n\tconst ret = {};\n\n\tret.promise = new Promise((resolve, reject) => {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t});\n\n\treturn ret;\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst p_defer_1 = __importDefault(require(\"p-defer\"));\nfunction mapAgeCleaner(map, property = 'maxAge') {\n    let processingKey;\n    let processingTimer;\n    let processingDeferred;\n    const cleanup = () => __awaiter(this, void 0, void 0, function* () {\n        if (processingKey !== undefined) {\n            // If we are already processing an item, we can safely exit\n            return;\n        }\n        const setupTimer = (item) => __awaiter(this, void 0, void 0, function* () {\n            processingDeferred = p_defer_1.default();\n            const delay = item[1][property] - Date.now();\n            if (delay <= 0) {\n                // Remove the item immediately if the delay is equal to or below 0\n                map.delete(item[0]);\n                processingDeferred.resolve();\n                return;\n            }\n            // Keep track of the current processed key\n            processingKey = item[0];\n            processingTimer = setTimeout(() => {\n                // Remove the item when the timeout fires\n                map.delete(item[0]);\n                if (processingDeferred) {\n                    processingDeferred.resolve();\n                }\n            }, delay);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof processingTimer.unref === 'function') {\n                // Don't hold up the process from exiting\n                processingTimer.unref();\n            }\n            return processingDeferred.promise;\n        });\n        try {\n            for (const entry of map) {\n                yield setupTimer(entry);\n            }\n        }\n        catch (_a) {\n            // Do nothing if an error occurs, this means the timer was cleaned up and we should stop processing\n        }\n        processingKey = undefined;\n    });\n    const reset = () => {\n        processingKey = undefined;\n        if (processingTimer !== undefined) {\n            clearTimeout(processingTimer);\n            processingTimer = undefined;\n        }\n        if (processingDeferred !== undefined) { // tslint:disable-line:early-exit\n            processingDeferred.reject(undefined);\n            processingDeferred = undefined;\n        }\n    };\n    const originalSet = map.set.bind(map);\n    map.set = (key, value) => {\n        if (map.has(key)) {\n            // If the key already exist, remove it so we can add it back at the end of the map.\n            map.delete(key);\n        }\n        // Call the original `map.set`\n        const result = originalSet(key, value);\n        // If we are already processing a key and the key added is the current processed key, stop processing it\n        if (processingKey && processingKey === key) {\n            reset();\n        }\n        // Always run the cleanup method in case it wasn't started yet\n        cleanup(); // tslint:disable-line:no-floating-promises\n        return result;\n    };\n    cleanup(); // tslint:disable-line:no-floating-promises\n    return map;\n}\nexports.default = mapAgeCleaner;\n// Add support for CJS\nmodule.exports = mapAgeCleaner;\nmodule.exports.default = mapAgeCleaner;\n","'use strict';\nconst mimicFn = require(\"mimic-fn\");\nconst mapAgeCleaner = require(\"map-age-cleaner\");\nconst decoratorInstanceMap = new WeakMap();\nconst cacheStore = new WeakMap();\n/**\n[Memoize](https://en.wikipedia.org/wiki/Memoization) functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n\n@param fn - Function to be memoized.\n\n@example\n```\nimport mem = require('mem');\n\nlet i = 0;\nconst counter = () => ++i;\nconst memoized = mem(counter);\n\nmemoized('foo');\n//=> 1\n\n// Cached as it's the same arguments\nmemoized('foo');\n//=> 1\n\n// Not cached anymore as the arguments changed\nmemoized('bar');\n//=> 2\n\nmemoized('bar');\n//=> 2\n```\n*/\nconst mem = (fn, { cacheKey, cache = new Map(), maxAge } = {}) => {\n    if (typeof maxAge === 'number') {\n        // TODO: Drop after https://github.com/SamVerschueren/map-age-cleaner/issues/5\n        // @ts-expect-error\n        mapAgeCleaner(cache);\n    }\n    const memoized = function (...arguments_) {\n        const key = cacheKey ? cacheKey(arguments_) : arguments_[0];\n        const cacheItem = cache.get(key);\n        if (cacheItem) {\n            return cacheItem.data;\n        }\n        const result = fn.apply(this, arguments_);\n        cache.set(key, {\n            data: result,\n            maxAge: maxAge ? Date.now() + maxAge : Number.POSITIVE_INFINITY\n        });\n        return result;\n    };\n    mimicFn(memoized, fn, {\n        ignoreNonConfigurable: true\n    });\n    cacheStore.set(memoized, cache);\n    return memoized;\n};\n/**\n@returns A [decorator](https://github.com/tc39/proposal-decorators) to memoize class methods or static class methods.\n\n@example\n```\nimport mem = require('mem');\n\nclass Example {\n    index = 0\n\n    @mem.decorator()\n    counter() {\n        return ++this.index;\n    }\n}\n\nclass ExampleWithOptions {\n    index = 0\n\n    @mem.decorator({maxAge: 1000})\n    counter() {\n        return ++this.index;\n    }\n}\n```\n*/\nmem.decorator = (options = {}) => (target, propertyKey, descriptor) => {\n    const input = target[propertyKey];\n    if (typeof input !== 'function') {\n        throw new TypeError('The decorated value must be a function');\n    }\n    delete descriptor.value;\n    delete descriptor.writable;\n    descriptor.get = function () {\n        if (!decoratorInstanceMap.has(this)) {\n            const value = mem(input, options);\n            decoratorInstanceMap.set(this, value);\n            return value;\n        }\n        return decoratorInstanceMap.get(this);\n    };\n};\n/**\nClear all cached data of a memoized function.\n\n@param fn - Memoized function.\n*/\nmem.clear = (fn) => {\n    const cache = cacheStore.get(fn);\n    if (!cache) {\n        throw new TypeError('Can\\'t clear a function that was not memoized!');\n    }\n    if (typeof cache.clear !== 'function') {\n        throw new TypeError('The cache Map can\\'t be cleared!');\n    }\n    cache.clear();\n};\nmodule.exports = mem;\n","import mem from 'mem'\nimport { Components } from '../../components'\n\nexport enum ToastTypes {\n  neutral = 'neutral',\n  success = 'success',\n  warn = 'warn',\n  danger = 'danger',\n}\n\nexport type ToastType = keyof typeof ToastTypes\n\nexport enum ToastPositions {\n  topStart = 'topStart',\n  topCenter = 'topCenter',\n  topEnd = 'topEnd',\n  bottomStart = 'bottomStart',\n  bottomCenter = 'bottomCenter',\n  bottomEnd = 'bottomEnd',\n}\n\nexport type ToastPosition = keyof typeof ToastPositions\n\ntype ToastOptions = Partial<Components.StencilaToast>\n\nconst init = (options: ToastOptions): Element | HTMLElement => {\n  const toastContainer = document.querySelector('stencila-toast-container')\n\n  if (toastContainer) {\n    return toastContainer\n  }\n\n  const container = document.createElement('stencila-toast-container')\n\n  if (options.position !== undefined) {\n    container.position = options.position\n  }\n\n  document.body.append(container)\n  return container\n}\n\n// ==============================================================================\n\ninterface ToastController {\n  present: (message: string, options?: ToastOptions) => HTMLStencilaToastElement\n}\n\n// Base Toast controller function for managing the presentation of `stencila-toast` components\nexport const toastController = (\n  baseOptions: ToastOptions = {}\n): ToastController => {\n  const present = (\n    message: string,\n    options: ToastOptions | undefined = {}\n  ): HTMLStencilaToastElement => {\n    const toastEl = document.createElement('stencila-toast')\n\n    toastEl.type = options.type ?? baseOptions.type ?? ToastTypes.neutral\n    toastEl.position =\n      options.position ?? baseOptions.position ?? ToastPositions.topCenter\n    toastEl.dismissable = options.dismissable ?? baseOptions.dismissable\n    toastEl.duration = options.duration ?? baseOptions.duration\n\n    toastEl.innerText = message\n    init(baseOptions).append(toastEl)\n    return toastEl\n  }\n\n  /** Memoize the notification function based on the message string and options to avoid showing\n   * duplicate notifications in quick succession.\n   */\n  const memoizedPresent = mem(present, {\n    cacheKey: JSON.stringify,\n    maxAge: 150,\n  })\n\n  return {\n    present: memoizedPresent,\n  }\n}\n"],"version":3}