{"version":3,"file":"codeUtils.js","sourceRoot":"","sources":["../../../src/components/code/codeUtils.ts"],"names":[],"mappings":"AAIA,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,MAAqB,EAAW,EAAE;;EAC1D,OAAO,CACL,MAAA,CAAC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC,SAAS,CAAC,MAAK,IAAI;IACnC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC,WAAW,CAAC,MAAK,IAAI,CAAC,mCACzC,KAAK,CACN,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,aAA4B,EAC5B,eAAgC,EAKhC,EAAE;EACF,gDAAgD;EAChD,QAAQ,aAAa,EAAE;IACrB,KAAK,WAAW,CAAC,CAAC;MAChB,OAAO;QACL,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,sBAAsB;QAC7B,KAAK,EAAE,WAAW;OACnB,CAAA;KACF;IACD,KAAK,2BAA2B,CAAC,CAAC;MAChC,OAAO;QACL,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,qBAAqB;QAC5B,KAAK,EAAE,+BAA+B;OACvC,CAAA;KACF;IACD,KAAK,SAAS,CAAC,CAAC;MACd,OAAO;QACL,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,sBAAsB;QAC7B,KAAK,EAAE,SAAS;OACjB,CAAA;KACF;IACD,KAAK,yBAAyB,CAAC,CAAC;MAC9B,OAAO;QACL,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,qBAAqB;QAC5B,KAAK,EAAE,6BAA6B;OACrC,CAAA;KACF;GACF;EAED,+CAA+C;EAC/C,QAAQ,eAAe,EAAE;IACvB,KAAK,eAAe,CAAC,CAAC;MACpB,OAAO;QACL,IAAI,EAAE,sBAAsB;QAC5B,KAAK,EAAE,sBAAsB;QAC7B,KAAK,EAAE,aAAa;OACrB,CAAA;KACF;IACD,KAAK,oBAAoB,CAAC,CAAC;MACzB,OAAO;QACL,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,qBAAqB;QAC5B,KAAK,EAAE,qBAAqB;OAC7B,CAAA;KACF;IACD,KAAK,qBAAqB,CAAC,CAAC;MAC1B,OAAO;QACL,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,mBAAmB;QAC1B,KAAK,EAAE,sBAAsB;OAC9B,CAAA;KACF;IACD,KAAK,kBAAkB,CAAC,CAAC;MACvB,OAAO;QACL,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,mBAAmB;QAC1B,KAAK,EAAE,mBAAmB;OAC3B,CAAA;KACF;IACD,KAAK,QAAQ,CAAC,CAAC;MACb,OAAO;QACL,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,qBAAqB;QAC5B,KAAK,EAAE,QAAQ;OAChB,CAAA;KACF;GACF;EAED,8BAA8B;EAC9B,QAAQ,aAAa,EAAE;IACrB,KAAK,WAAW,CAAC,CAAC;MAChB,OAAO;QACL,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,sBAAsB;QAC7B,KAAK,EAAE,WAAW;OACnB,CAAA;KACF;IACD,KAAK,QAAQ,CAAC,CAAC;MACb,OAAO;QACL,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,qBAAqB;QAC5B,KAAK,EAAE,QAAQ;OAChB,CAAA;KACF;IACD,KAAK,WAAW,CAAC,CAAC;MAChB,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,mBAAmB;QAC1B,KAAK,EAAE,WAAW;OACnB,CAAA;KACF;GACF;EAED,uFAAuF;EACvF,yFAAyF;EACzF,mBAAmB;EACnB,OAAO;IACL,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,sBAAsB;IAC7B,KAAK,EAAE,gBAAgB;GACxB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { Colors } from '../../types'\nimport { IconNames } from '../icon/iconNames'\nimport { ExecuteRequired, ExecuteStatus } from './codeTypes'\n\nexport const isPending = (status: ExecuteStatus): boolean => {\n  return (\n    (status?.includes('Running') === true ||\n      status?.includes('Scheduled') === true) ??\n    false\n  )\n}\n\nexport const executionIconByStatus = (\n  executeStatus: ExecuteStatus,\n  executeRequired: ExecuteRequired\n): {\n  icon: IconNames\n  color: `${Colors}, ${string}`\n  title: string\n} => {\n  // If scheduled or running then show that status\n  switch (executeStatus) {\n    case 'Scheduled': {\n      return {\n        icon: 'timer-2',\n        color: 'neutral-500, #6e7591',\n        title: 'Scheduled',\n      }\n    }\n    case 'ScheduledPreviouslyFailed': {\n      return {\n        icon: 'timer-2',\n        color: 'danger-500, #cf445e',\n        title: 'Scheduled (previously failed)',\n      }\n    }\n    case 'Running': {\n      return {\n        icon: 'loader-2',\n        color: 'neutral-500, #6e7591',\n        title: 'Running',\n      }\n    }\n    case 'RunningPreviouslyFailed': {\n      return {\n        icon: 'loader-2',\n        color: 'danger-500, #cf445e',\n        title: 'Running (previously failed)',\n      }\n    }\n  }\n\n  // Otherwise, if execution is required show why\n  switch (executeRequired) {\n    case 'NeverExecuted': {\n      return {\n        icon: 'indeterminate-circle',\n        color: 'neutral-500, #6e7591',\n        title: 'Not run yet',\n      }\n    }\n    case 'DependenciesFailed': {\n      return {\n        icon: 'refresh',\n        color: 'danger-500, #cf445e',\n        title: 'Dependencies failed',\n      }\n    }\n    case 'DependenciesChanged': {\n      return {\n        icon: 'refresh',\n        color: 'warn-600, #ba8925',\n        title: 'Dependencies changed',\n      }\n    }\n    case 'SemanticsChanged': {\n      return {\n        icon: 'refresh',\n        color: 'warn-600, #ba8925',\n        title: 'Semantics changed',\n      }\n    }\n    case 'Failed': {\n      return {\n        icon: 'close-circle',\n        color: 'danger-500, #cf445e',\n        title: 'Failed',\n      }\n    }\n  }\n\n  // Otherwise, show last status\n  switch (executeStatus) {\n    case 'Succeeded': {\n      return {\n        icon: 'checkbox-circle',\n        color: 'success-500, #3c8455',\n        title: 'Succeeded',\n      }\n    }\n    case 'Failed': {\n      return {\n        icon: 'close-circle',\n        color: 'danger-500, #cf445e',\n        title: 'Failed',\n      }\n    }\n    case 'Cancelled': {\n      return {\n        icon: 'forbid',\n        color: 'warn-600, #ba8925',\n        title: 'Cancelled',\n      }\n    }\n  }\n\n  // Although this should be redundant, it avoids this function every returning undefined\n  // which causes other errors (e.g. if there is a patching error or a new variant added to\n  // the above enums)\n  return {\n    icon: 'question',\n    color: 'neutral-500, #6e7591',\n    title: 'Unknown status',\n  }\n}\n"]}