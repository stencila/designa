{"version":3,"file":"documentToolbar.js","sourceRoot":"","sources":["../../../src/components/documentToolbar/documentToolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ComponentInterface,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n} from '@stencil/core'\nimport {\n  CodeExecuteCancelEvent,\n  CodeExecuteEvent,\n  DiscoverExecutableLanguagesEvent,\n  ExecuteStatus,\n} from '../code/codeTypes'\nimport { isPending } from '../code/codeUtils'\n\n// =============================================================================\n\n@Component({\n  tag: 'stencila-document-toolbar',\n  styleUrls: {\n    default: 'documentToolbar.css',\n    material: 'documentToolbar.css',\n  },\n})\nexport class StencilaDocumentToolbar implements ComponentInterface {\n  /**\n   * The URL of the document being decorated. Could be a Snapshot from Stencila Hub, a Project URL, or something else.\n   */\n  @Prop()\n  sourceUrl: string\n\n  /**\n   * When `fixed` the Navbar will remain pinned to the top of the screen.\n   * Note that if the Navbar component is not followed by a sibling element,\n   * you will have to set `margin-top: 3rem` on the following element yourself.\n   */\n  @Prop()\n  public position: 'fixed' | 'static' = 'fixed'\n\n  /**\n   * The execution status of the document\n   */\n  @Prop()\n  executeStatus: ExecuteStatus\n\n  @State()\n  isExecutable: boolean =\n    Object.keys(window.stencilaWebClient?.executableLanguages ?? {}).length > 0\n\n  @State()\n  shiftIsPressed = false\n\n  @State()\n  altIsPressed = false\n\n  private onKeyPress = (e: KeyboardEvent): void => {\n    this.shiftIsPressed = e.shiftKey\n    this.altIsPressed = e.altKey\n  }\n\n  private addKeyListeners = () => {\n    window.addEventListener('keydown', this.onKeyPress)\n    window.addEventListener('keyup', this.onKeyPress)\n  }\n\n  private removeKeyListeners = () => {\n    window.removeEventListener('keydown', this.onKeyPress)\n    window.removeEventListener('keyup', this.onKeyPress)\n    this.shiftIsPressed = false\n    this.altIsPressed = false\n  }\n\n  @Listen('stencila-discover-executable-languages', { target: 'window' })\n  onDiscoverExecutableLanguages({\n    detail,\n  }: DiscoverExecutableLanguagesEvent): void {\n    this.isExecutable = Object.keys(detail.languages).length > 0\n  }\n\n  /**\n   * Emitted to indicate that code node should be executed\n   *\n   */\n  @Event({\n    eventName: 'stencila-code-execute',\n  })\n  public codeExecuteEvent: EventEmitter<CodeExecuteEvent['detail']>\n\n  /**\n   * Emitted to indicate that language kernels should be restarted\n   *\n   */\n  @Event({\n    eventName: 'stencila-kernel-restart',\n  })\n  public kernelRestart: EventEmitter<Record<string, never>>\n\n  /**\n   * Emitted to indicate that the execution of the code node should be cancelled/interrupted.\n   */\n  @Event({\n    eventName: 'stencila-code-execute-cancel',\n  })\n  public codeExecuteCancelEvent: EventEmitter<CodeExecuteCancelEvent['detail']>\n\n  private runDocument = (e: MouseEvent) => {\n    if (isPending(this.executeStatus)) {\n      this.codeExecuteCancelEvent.emit({\n        nodeId: null,\n        scope: 'All',\n      })\n    } else {\n      if (this.altIsPressed) {\n        // Restart kernel\n        this.kernelRestart.emit()\n      } else {\n        // Execute document\n        this.codeExecuteEvent.emit({\n          nodeId: null,\n          ordering: e.shiftKey ? 'Appearance' : 'Topological',\n        })\n      }\n    }\n  }\n\n  render(): HTMLElement {\n    return (\n      <Host position={this.position}>\n        <stencila-toolbar>\n          <span slot=\"start\">\n            <stencila-button\n              onKeyDown={this.onKeyPress}\n              color=\"stock\"\n              icon={\n                this.altIsPressed\n                  ? 'restart'\n                  : isPending(this.executeStatus)\n                  ? 'stop'\n                  : 'play'\n              }\n              size=\"small\"\n              onClick={this.runDocument}\n              disabled={!this.isExecutable}\n              dataEl=\"Toolbar/Run Document\"\n              onMouseEnter={this.addKeyListeners}\n              onMouseLeave={this.removeKeyListeners}\n              tooltip={\n                this.altIsPressed\n                  ? undefined\n                  : this.shiftIsPressed\n                  ? 'Run in sequentially, in order of appearance'\n                  : 'Run in topological order'\n              }\n            >\n              {this.altIsPressed\n                ? 'Restart kernels'\n                : isPending(this.executeStatus)\n                ? 'Cancel all'\n                : 'Run all'}\n            </stencila-button>\n          </span>\n\n          {this.sourceUrl !== undefined && (\n            <span slot=\"end\">\n              <stencila-button\n                color=\"stock\"\n                href={this.sourceUrl}\n                target=\"_blank\"\n                rel=\"nofollow noopener\"\n                icon=\"external-link\"\n                size=\"small\"\n                dataEl=\"Toolbar/Project Source\"\n              >\n                Source\n              </stencila-button>\n            </span>\n          )}\n        </stencila-toolbar>\n      </Host>\n    )\n  }\n}\n"]}