{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/parameter/validators/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAuB,CAAC,EAAE,MAAM,eAAe,CAAA;AAEtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAA;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAA;AACvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAA;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AACnD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AAQnD,MAAM,aAAa,GAAG,CAAC,CAAQ,EAAE,EAAE;EACjC,MAAM,MAAM,GAAG,CAAC,CAAC,MAA8C,CAAA;EAC/D,MAAM,CAAC,cAAc,EAAE,CAAA;AACzB,CAAC,CAAA;AAED,MAAM,YAAY,GAChB,CAAC,UAAoB,EAAE,EAAE,CAAC,CAAC,aAA4B,EAAE,EAAE;EACzD,QAAQ,aAAa,EAAE;IACrB,KAAK,iBAAiB,CAAC,CAAC;MACtB,OAAO,EAAC,eAAe,IAAC,OAAO,EAAE,UAAU,GAAoB,CAAA;KAChE;IACD,KAAK,kBAAkB,CAAC,CAAC;MACvB,OAAO,EAAC,gBAAgB,IAAC,OAAO,EAAE,UAAU,GAAqB,CAAA;KAClE;IACD,KAAK,iBAAiB,CAAC,CAAC;MACtB,OAAO,EAAC,eAAe,IAAC,OAAO,EAAE,UAAU,GAAoB,CAAA;KAChE;IACD,KAAK,mBAAmB,CAAC,CAAC;MACxB,OAAO,EAAC,iBAAiB,IAAC,OAAO,EAAE,UAAU,GAAsB,CAAA;KACpE;IACD,KAAK,kBAAkB,CAAC,CAAC;MACvB,OAAO,EAAC,gBAAgB,IAAC,OAAO,EAAE,UAAU,GAAqB,CAAA;KAClE;GACF;AACH,CAAC,CAAA;AAEH,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,KAAY,EAAuB,EAAE;EAC7D,OAAO,CACL,qBAAe,SAAS,EAAE,KAAK,EAAE,YAAY,EAAC,cAAc;IAC1D,uBACE,QAAQ,EAAE,IAAI,EACd,IAAI,EAAC,WAAW,EAChB,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,QAAQ,gBACF,aAAa,EACxB,KAAK,EAAC,KAAK,EACX,OAAO,EAAE,IAAI,GACI;IAEnB,YACE,QAAQ,EAAE,KAAK,CAAC,iBAAiB,EACjC,OAAO,EAAE,aAAa,EACtB,SAAS,EAAE,aAAa;MAExB;;QAEE,cAAQ,IAAI,EAAC,WAAW;UACtB,cAAQ,QAAQ,QAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,SAAS,mBAE1C;UACT,cACE,KAAK,EAAC,kBAAkB,EACxB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,kBAAkB,cAGpC;UACT,cACE,KAAK,EAAC,kBAAkB,EACxB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,kBAAkB,cAGpC;UACT,cACE,KAAK,EAAC,iBAAiB,EACvB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,iBAAiB,aAGnC;UACT,cACE,KAAK,EAAC,iBAAiB,EACvB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,iBAAiB,aAGnC;UACT,cACE,KAAK,EAAC,eAAe,EACrB,QAAQ,EAAE,KAAK,CAAC,IAAI,KAAK,eAAe,WAGjC,CACF,CACH;MAEP,YAAY,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CACtC,CACO,CACjB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { FunctionalComponent, h } from '@stencil/core'\nimport { ValidatorTypes } from '../types'\nimport { BooleanValidator } from './booleanValidator'\nimport { ConstantValidator } from './constantValidator'\nimport { IntegerValidator } from './integerValidator'\nimport { NumberValidator } from './numberValidator'\nimport { StringValidator } from './stringValidator'\n\ninterface Props {\n  onValidatorChange: (e: Event) => void\n  type?: ValidatorTypes\n  valueElRef?: Element\n}\n\nconst validateField = (e: Event) => {\n  const target = e.target as HTMLSelectElement | HTMLInputElement\n  target.reportValidity()\n}\n\nconst getValidator =\n  (valueElRef?: Element) => (validatorType: Props['type']) => {\n    switch (validatorType) {\n      case 'NumberValidator': {\n        return <NumberValidator valueEl={valueElRef}></NumberValidator>\n      }\n      case 'IntegerValidator': {\n        return <IntegerValidator valueEl={valueElRef}></IntegerValidator>\n      }\n      case 'StringValidator': {\n        return <StringValidator valueEl={valueElRef}></StringValidator>\n      }\n      case 'ConstantValidator': {\n        return <ConstantValidator valueEl={valueElRef}></ConstantValidator>\n      }\n      case 'BooleanValidator': {\n        return <BooleanValidator valueEl={valueElRef}></BooleanValidator>\n      }\n    }\n  }\n\nexport const Validator = (props: Props): FunctionalComponent => {\n  return (\n    <stencila-menu autoClose={false} menuPosition=\"bottom-start\">\n      <stencila-button\n        iconOnly={true}\n        icon=\"equalizer\"\n        size=\"xsmall\"\n        slot=\"toggle\"\n        aria-label=\"Toggle menu\"\n        color=\"key\"\n        minimal={true}\n      ></stencila-button>\n\n      <form\n        onChange={props.onValidatorChange}\n        onInput={validateField}\n        onFocusin={validateField}\n      >\n        <label>\n          Type\n          <select name=\"validator\">\n            <option disabled selected={props.type === undefined}>\n              Selectâ€¦\n            </option>\n            <option\n              value=\"BooleanValidator\"\n              selected={props.type === 'BooleanValidator'}\n            >\n              Boolean\n            </option>\n            <option\n              value=\"IntegerValidator\"\n              selected={props.type === 'IntegerValidator'}\n            >\n              Integer\n            </option>\n            <option\n              value=\"NumberValidator\"\n              selected={props.type === 'NumberValidator'}\n            >\n              Number\n            </option>\n            <option\n              value=\"StringValidator\"\n              selected={props.type === 'StringValidator'}\n            >\n              String\n            </option>\n            <option\n              value=\"EnumValidator\"\n              selected={props.type === 'EnumValidator'}\n            >\n              Enum\n            </option>\n          </select>\n        </label>\n\n        {getValidator(props.valueElRef)(props.type)}\n      </form>\n    </stencila-menu>\n  )\n}\n"]}