{"version":3,"file":"stringValidator.js","sourceRoot":"","sources":["../../../../src/components/parameter/validators/stringValidator.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAuB,CAAC,EAAE,MAAM,eAAe,CAAA;AAEhE,MAAM,aAAa,GAAG,CAAC,OAAiB,EAAE,EAAE;;EAC1C,OAAO;IACL,OAAO,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,aAAa,CAAC,mCAAI,SAAS;IAC1D,SAAS,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,WAAW,CAAC,mCAAI,SAAS;IAC1D,SAAS,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,WAAW,CAAC,mCAAI,SAAS;IAC1D,OAAO,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,SAAS,CAAC,mCAAI,SAAS;GACvD,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,EAC9B,OAAO,GAGR,EAAuB,EAAE;EACxB,MAAM,MAAM,GAAG,aAAa,CAAC,OAAO,CAAC,CAAA;EAErC,OAAO,CACL,EAAC,QAAQ;IACP;;MAEE,aAAO,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAE,MAAM,CAAC,OAAO,GAAI,CACrD;IAER;;MAEE,aACE,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,GAAG,EACR,IAAI,EAAC,WAAW,EAChB,KAAK,EAAE,MAAM,CAAC,SAAS,EACvB,GAAG,EAAC,GAAG,GACP,CACI;IAER;;MAEE,aACE,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,GAAG,EACR,IAAI,EAAC,WAAW,EAChB,KAAK,EAAE,MAAM,CAAC,SAAS,GACvB,CACI;IAER;;MAEE,aAAO,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,SAAS,EAAC,KAAK,EAAE,MAAM,CAAC,OAAO,GAAI,CACrD,CACC,CACZ,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { Fragment, FunctionalComponent, h } from '@stencil/core'\n\nconst getProperties = (valueEl?: Element) => {\n  return {\n    default: valueEl?.getAttribute('placeholder') ?? undefined,\n    minLength: valueEl?.getAttribute('minLength') ?? undefined,\n    maxLength: valueEl?.getAttribute('maxLength') ?? undefined,\n    pattern: valueEl?.getAttribute('pattern') ?? undefined,\n  }\n}\n\nexport const StringValidator = ({\n  valueEl,\n}: {\n  valueEl?: Element\n}): FunctionalComponent => {\n  const values = getProperties(valueEl)\n\n  return (\n    <Fragment>\n      <label>\n        Default value\n        <input type=\"text\" name=\"default\" value={values.default} />\n      </label>\n\n      <label>\n        Minimum length\n        <input\n          type=\"number\"\n          step=\"1\"\n          name=\"minLength\"\n          value={values.minLength}\n          min=\"0\"\n        />\n      </label>\n\n      <label>\n        Maximum length\n        <input\n          type=\"number\"\n          step=\"1\"\n          name=\"maxLength\"\n          value={values.maxLength}\n        />\n      </label>\n\n      <label>\n        Pattern (RegEx)\n        <input type=\"text\" name=\"pattern\" value={values.pattern} />\n      </label>\n    </Fragment>\n  )\n}\n"]}