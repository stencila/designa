{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/components/parameter/types.ts"],"names":[],"mappings":"AAIA,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,cAAsB,EACY,EAAE;EACpC,OAAO,CACL,cAAc,KAAK,WAAW;IAC9B,cAAc,KAAK,gBAAgB;IACnC,cAAc,KAAK,kBAAkB;IACrC,cAAc,KAAK,mBAAmB;IACtC,cAAc,KAAK,eAAe;IAClC,cAAc,KAAK,kBAAkB;IACrC,cAAc,KAAK,iBAAiB;IACpC,cAAc,KAAK,iBAAiB;IACpC,cAAc,KAAK,gBAAgB,CACpC,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { ValidatorTypes as ValidatorTypeSchema } from '@stencila/schema'\n\nexport type ValidatorTypes = Exclude<ValidatorTypeSchema['type'], 'Validator'>\n\nexport const isValidatorType = (\n  maybeValidator: string\n): maybeValidator is ValidatorTypes => {\n  return (\n    maybeValidator === 'Validator' ||\n    maybeValidator === 'ArrayValidator' ||\n    maybeValidator === 'BooleanValidator' ||\n    maybeValidator === 'ConstantValidator' ||\n    maybeValidator === 'EnumValidator' ||\n    maybeValidator === 'IntegerValidator' ||\n    maybeValidator === 'NumberValidator' ||\n    maybeValidator === 'StringValidator' ||\n    maybeValidator === 'TupleValidator'\n  )\n}\n"]}