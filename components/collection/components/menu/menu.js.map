{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../../src/components/menu/menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Host, Prop } from '@stencil/core'\nimport { createPopper, Instance, Placement } from '@popperjs/core'\n\nlet menuIds = 0\n\n@Component({\n  tag: 'stencila-menu',\n  styleUrls: {\n    default: 'menu.css',\n    material: 'menu.material.css',\n  },\n  scoped: true,\n})\nexport class Menu {\n  @Element() private el: HTMLStencilaCodeFragmentElement\n\n  private menuEl: HTMLUListElement | undefined\n  private popperRef: Instance | null = null\n\n  /**\n   * Determines whether the Menu is shown or not\n   */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  })\n  public isOpen = false\n\n  /**\n   * Close the menu when losing focus\n   */\n  @Prop()\n  public autoClose = true\n\n  /**\n   * Open the menu on hover or when gaining focus\n   */\n  @Prop()\n  public autoOpen = false\n\n  /**\n   * The position relative to the toggle button where the menu should appear.\n   */\n  @Prop()\n  public menuPosition: Placement = 'right-start'\n\n  initMenu = () => {\n    if (this.menuEl) {\n      this.popperRef = createPopper(this.el, this.menuEl, {\n        placement: this.menuPosition,\n        strategy: 'fixed',\n        modifiers: [{ name: 'preventOverflow' }],\n      })\n    }\n  }\n\n  private computeMenuLocation = () => {\n    this.popperRef\n      ? this.popperRef.update().catch((err) => {\n          console.error('Could not update menu position', err)\n        })\n      : this.initMenu()\n  }\n\n  private toggleMenu = (e: MouseEvent) => {\n    e.preventDefault()\n    if (this.autoClose) {\n      e.stopPropagation()\n    }\n    this.isOpen ? (this.isOpen = false) : this.openMenu()\n  }\n\n  private openMenu = () => {\n    this.computeMenuLocation()\n    this.isOpen = true\n  }\n\n  private closeMenu = () => {\n    if (this.autoClose) {\n      this.isOpen = false\n    }\n  }\n\n  private autoCloseTimeoutRef: number\n  private closeOnBlur = (e: MouseEvent) => {\n    if (this.isOpen && !this.el.contains(e.relatedTarget as Node)) {\n      this.autoCloseTimeoutRef = window.setTimeout(this.closeMenu, 250)\n    }\n  }\n\n  private clearTimeout = () => {\n    window.clearTimeout(this.autoCloseTimeoutRef)\n  }\n\n  private menuId = `stencila-menu-${menuIds++}`\n\n  componentWillLoad() {\n    if (this.autoClose) {\n      this.el.addEventListener('mouseout', this.closeOnBlur)\n      this.el.addEventListener('mouseenter', this.clearTimeout)\n    }\n\n    if (this.autoOpen) {\n      this.el.addEventListener('mouseenter', this.openMenu)\n      this.el.addEventListener('focus', this.openMenu)\n    }\n  }\n\n  public disconnectedCallback(): void {\n    this.el.removeEventListener('mouseout', this.closeOnBlur)\n    this.el.removeEventListener('mouseenter', this.clearTimeout)\n    this.el.removeEventListener('mouseenter', this.openMenu)\n    this.el.removeEventListener('focus', this.openMenu)\n\n    if (this.popperRef) {\n      this.popperRef.destroy()\n      this.popperRef = null\n    }\n  }\n\n  public render() {\n    return (\n      <Host>\n        <span\n          onClick={this.toggleMenu}\n          aria-controls={this.menuId}\n          aria-expanded={this.isOpen ? 'true' : 'false'}\n        >\n          <slot name=\"toggle\" />\n        </span>\n\n        <ul\n          role=\"menu\"\n          aria-hidden={!this.isOpen}\n          aria-orientation=\"vertical\"\n          tabindex=\"-1\"\n          id={this.menuId}\n          onClick={this.closeMenu}\n          ref={(el) => (this.menuEl = el)}\n        >\n          <slot />\n        </ul>\n      </Host>\n    )\n  }\n}\n"]}