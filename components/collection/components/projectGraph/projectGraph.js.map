{"version":3,"file":"projectGraph.js","sourceRoot":"","sources":["../../../src/components/projectGraph/projectGraph.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Host, Prop, Watch } from '@stencil/core'\nimport { D3DragEvent, drag } from 'd3-drag'\nimport {\n  forceCenter,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceSimulation,\n  forceX,\n  forceY,\n} from 'd3-force'\nimport { polygonHull } from 'd3-polygon'\nimport { Selection } from 'd3-selection'\nimport { curveBasisClosed, line } from 'd3-shape'\nimport { graphToGroupedGraph, isInterGroupLink } from './graphs'\nimport { FileResource, Graph, SimulationGraphNode } from './types'\nimport { GraphDatum, initGraph } from './utils'\nimport { hasKind } from './utils/guards'\nimport { getNodeX, getNodeY } from './utils/nodes'\nimport { getRelationLabel, getResourceLabel } from './utils/resource'\nimport { getResourceSymbol } from './utils/symbols'\n\ntype NodeDragEvent = D3DragEvent<SVGGElement, GraphDatum, GraphDatum>\n\n@Component({\n  tag: 'stencila-project-graph',\n  styleUrls: {\n    default: 'projectGraph.css',\n    material: 'projectGraph.material.css',\n  },\n  shadow: true,\n})\nexport class ProjectGraph {\n  private el?: HTMLDivElement\n\n  /**\n   * The project graph data to render\n   */\n  @Prop() graph: Graph\n\n  @Watch('graph')\n  updateGraph(nextGraph: Graph): void {\n    this.drawGraph(nextGraph)\n  }\n\n  private graphRef: {\n    height: number\n    width: number\n    svg: Selection<SVGGElement, unknown, null, undefined>\n  }\n\n  private nodeContainer:\n    | Selection<SVGGElement, unknown, null, unknown>\n    | undefined\n\n  private linkContainer:\n    | Selection<SVGGElement, unknown, null, unknown>\n    | undefined\n\n  private hullContainer:\n    | Selection<SVGGElement, unknown, null, unknown>\n    | undefined\n\n  private drawGraph = (graph: Graph) => {\n    const { svg } = this.graphRef\n\n    const groupedGraph = graphToGroupedGraph(graph)\n\n    const simulation = forceSimulation(groupedGraph.nodes)\n      .force(\n        'link',\n        forceLink(groupedGraph.links)\n          .strength((d) =>\n            isInterGroupLink(d.source, d.target) ||\n            (hasKind(d.source) && d.source.kind === 'Link') ||\n            (hasKind(d.target) && d.target.kind === 'Link')\n              ? 1\n              : 0.375\n          )\n          .iterations(2)\n          .distance((d) =>\n            (hasKind(d.source) && d.source.kind === 'Link') ||\n            (hasKind(d.target) && d.target.kind === 'Link')\n              ? 0\n              : 30\n          )\n          .iterations(2)\n      )\n      .force(\n        'link:groups',\n        forceLink(groupedGraph.groupLinks)\n          .strength((d) =>\n            (hasKind(d.source) && d.source.kind === 'Link') ||\n            (hasKind(d.target) && d.target.kind === 'Link')\n              ? 1\n              : 0.375\n          )\n          .iterations(3)\n      )\n      .force(\n        'charge',\n        forceManyBody<SimulationGraphNode>()\n          .strength((d) => {\n            return d.type === 'File' ? -100 : -1500\n          })\n          .distanceMin(10)\n          .distanceMax(1500)\n      )\n      .force('collision', forceCollide(64).strength(1).iterations(4))\n      .force('x', forceX().strength(0.02))\n      .force('y', forceY().strength(0.02))\n      .force('center', forceCenter())\n      .velocityDecay(0.4)\n      .alphaDecay(0.05)\n\n    const click = (_event: Event, d: GraphDatum) => {\n      delete d.fx\n      delete d.fy\n      simulation.alpha(0.5).restart()\n    }\n\n    const dragFn = drag<SVGGElement, GraphDatum, GraphDatum>().on(\n      'drag',\n      (event: NodeDragEvent, d: GraphDatum) => {\n        // d.fx = clamp(event.x, 0, width)\n        // d.fy = clamp(event.y, 0, height)\n        d.fx = event.x\n        d.fy = event.y\n\n        simulation.alpha(0.05).restart()\n      }\n    )\n\n    const hullContainer =\n      this.hullContainer ?? svg.append('g').attr('class', 'hullContainer')\n\n    if (!this.hullContainer) {\n      this.hullContainer = hullContainer\n    }\n\n    const linkContainer =\n      this.linkContainer ?? svg.append('g').attr('class', 'linkContainer')\n\n    if (!this.linkContainer) {\n      this.linkContainer = linkContainer\n    }\n\n    const links = linkContainer\n      .selectAll('g')\n      .data(groupedGraph.links)\n      .join((enter) => {\n        const linkGroup = enter.append('g')\n\n        linkGroup.append('line').attr('marker-end', 'url(#end)')\n\n        linkGroup.append('text').text((d) => {\n          return getRelationLabel(d.relation)\n        })\n\n        return linkGroup\n      })\n\n    const nodeContainer = this.nodeContainer ?? svg.append('g')\n\n    if (!this.nodeContainer) {\n      this.nodeContainer = nodeContainer\n    }\n\n    // Hulls are the container shapes surrounding clusters of nodes\n    // @see https://github.com/d3/d3-polygon/blob/main/README.md#polygonhull\n    const drawHull = (\n      fileNode: string | number | undefined | FileResource\n    ): string => {\n      if (\n        fileNode === undefined ||\n        typeof fileNode === 'string' ||\n        typeof fileNode === 'number'\n      ) {\n        return ''\n      }\n\n      // Padding amount to use when drawing shape around symbols\n      const pad = 32\n\n      const hullFileNodes = groupedGraph.groupLinks.filter(\n        (node) => node.group === fileNode.path\n      )\n\n      const rootCoords: [number, number][] =\n        hullFileNodes.length === 0\n          ? []\n          : [\n              [-pad, -pad],\n              [pad, -pad],\n              [pad, pad],\n              [0, pad],\n            ]\n\n      // The target is always the File node being linked to\n      const targetX = getNodeX(fileNode)\n      const targetY = getNodeY(fileNode)\n\n      const hull = polygonHull(\n        hullFileNodes.reduce((nodes: [number, number][], node) => {\n          const sourceX = getNodeX(node.source)\n          const sourceY = getNodeY(node.source)\n\n          return [\n            ...nodes,\n            [sourceX - targetX - pad, sourceY - targetY - pad],\n            [sourceX - targetX - pad, sourceY - targetY + pad],\n            [sourceX - targetX + pad, sourceY - targetY - pad],\n            [sourceX - targetX + pad, sourceY - targetY + pad],\n          ]\n        }, rootCoords)\n      )\n\n      return hull ? line().curve(curveBasisClosed)(hull) ?? '' : ''\n    }\n\n    const hull = hullContainer\n      .selectAll('path')\n      .data(groupedGraph.groups)\n      .join('path')\n      .attr('d', (d) => drawHull(d) ?? '')\n\n    const node = nodeContainer\n      .selectAll<SVGGElement, GraphDatum>('g')\n      .data<GraphDatum>(groupedGraph.nodes)\n      .join((enter) => {\n        const nodeGroup = enter.append('g')\n\n        nodeGroup\n          .append('path')\n          .attr('d', (d) =>\n            getResourceSymbol(d)(d.type === 'File' ? 1024 : 512)\n          )\n          .attr('class', (d) => {\n            return hasKind(d) ? `${d.type} ${d.kind}` : d.type\n          })\n\n        nodeGroup\n          .append('text')\n          .attr('class', 'textBackdrop')\n          .attr('dy', '.35em')\n          .text(getResourceLabel)\n          .append('text')\n          .exit()\n\n        nodeGroup\n          .append('text')\n          .attr('dy', '.35em')\n          .text(getResourceLabel)\n          .exit()\n\n        nodeGroup.append('title').text((d) => d.type)\n\n        return nodeGroup\n      })\n      .attr('class', (d) => (hasKind(d) ? `${d.type} ${d.kind}` : d.type))\n      .on('click', click)\n      .call(dragFn)\n\n    simulation.on('tick', () => {\n      // Position link lines\n      links\n        .select('line')\n        .attr('x1', ({ source }) =>\n          typeof source === 'object' ? source.x ?? 0 : source\n        )\n        .attr('y1', ({ source }) =>\n          typeof source === 'object' ? source.y ?? 0 : source\n        )\n        .attr('x2', ({ target }) =>\n          typeof target === 'object' ? target.x ?? 0 : target\n        )\n        .attr('y2', ({ target }) =>\n          typeof target === 'object' ? target.y ?? 0 : target\n        )\n\n      // Position link line labels\n      links.select('text').attr('transform', (d) => {\n        if (\n          typeof d.source === 'object' &&\n          typeof d.source.y === 'number' &&\n          typeof d.source.x === 'number' &&\n          typeof d.target === 'object' &&\n          typeof d.target.y === 'number' &&\n          typeof d.target.x === 'number'\n        ) {\n          return `translate(${d.source.x - (d.source.x - d.target.x) / 2}, ${\n            d.source.y - (d.source.y - d.target.y) / 2\n          })`\n        }\n\n        return ''\n      })\n\n      node.attr('transform', ({ x, y }) => `translate(${x ?? 0}, ${y ?? 0})`)\n\n      // Update File node grouping container shape\n      hull\n        .attr('transform', (d) => `translate(${d.x ?? 0}, ${d.y ?? 0})`)\n        .attr('d', (d) => drawHull(d) ?? '')\n    })\n  }\n\n  componentDidLoad() {\n    if (this.el) {\n      this.graphRef = initGraph(this.el)\n      this.drawGraph(this.graph)\n    }\n  }\n\n  public render() {\n    return (\n      <Host>\n        <div ref={(el) => (this.el = el)} class=\"projectGraph\"></div>\n      </Host>\n    )\n  }\n}\n"]}