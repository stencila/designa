{"version":3,"file":"nodes.js","sourceRoot":"","sources":["../../../../src/components/projectGraph/utils/nodes.ts"],"names":[],"mappings":"AAIA,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAc,EAAU,EAAE;;EACjD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,IAAI,CAAA;GACZ;OAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IACnC,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;GACjC;EAED,OAAO,MAAA,IAAI,CAAC,CAAC,mCAAI,CAAC,CAAA;AACpB,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAc,EAAU,EAAE;;EACjD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO,IAAI,CAAA;GACZ;OAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IACnC,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;GACjC;EAED,OAAO,MAAA,IAAI,CAAC,CAAC,mCAAI,CAAC,CAAA;AACpB,CAAC,CAAA","sourcesContent":["import { SimulationNodeDatum } from 'd3-force'\n\ntype NodeType = string | number | SimulationNodeDatum\n\nexport const getNodeX = (node: NodeType): number => {\n  if (typeof node === 'number') {\n    return node\n  } else if (typeof node === 'string') {\n    return Number.parseInt(node, 10)\n  }\n\n  return node.x ?? 0\n}\n\nexport const getNodeY = (node: NodeType): number => {\n  if (typeof node === 'number') {\n    return node\n  } else if (typeof node === 'string') {\n    return Number.parseInt(node, 10)\n  }\n\n  return node.y ?? 0\n}\n"]}