{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/projectGraph/utils/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAA;AACrC,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAA;AAK9B,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAkB,EAAE,EAAE;EAC9C,MAAM,MAAM,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAA;EACzC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAA;EACzD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAA;EAEtD,MAAM,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC;KACnB,MAAM,CAAC,KAAK,CAAC;KACb,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;EAEtE,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;EAElC,MAAM,MAAM,GAAG,IAAI,EAA0B,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;IACzE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;EACzC,CAAC,CAAC,CAAA;EAEF,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;EAEhB,GAAG;KACA,MAAM,CAAC,UAAU,CAAC;KAClB,SAAS,CAAC,QAAQ,CAAC;KACnB,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;KACb,KAAK,EAAE;KACP,MAAM,CAAC,YAAY,CAAC;KACpB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;KAClB,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;KAC7B,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;KAChB,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KACf,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACtB,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;KACvB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;KACtB,MAAM,CAAC,UAAU,CAAC;KAClB,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAA;EAE9B,OAAO;IACL,MAAM;IACN,KAAK;IACL,GAAG,EAAE,UAAU;GAChB,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { SimulationNodeDatum } from 'd3-force'\nimport { select } from 'd3-selection'\nimport { zoom } from 'd3-zoom'\nimport { Resource } from '../types'\n\nexport type GraphDatum = SimulationNodeDatum & Resource\n\nexport const initGraph = (el: HTMLDivElement) => {\n  const elSize = el.getBoundingClientRect()\n  const height = elSize.height >= 120 ? elSize.height : 600\n  const width = elSize.width >= 100 ? elSize.width : 600\n\n  const svg = select(el)\n    .append('svg')\n    .attr('viewBox', [-width / 2, -height / 2, width, height].join(' '))\n\n  const svgContent = svg.append('g')\n\n  const zoomFn = zoom<SVGSVGElement, unknown>().on('zoom', ({ transform }) => {\n    svgContent.attr('transform', transform)\n  })\n\n  svg.call(zoomFn)\n\n  svg\n    .append('svg:defs')\n    .selectAll('marker')\n    .data(['end'])\n    .enter()\n    .append('svg:marker')\n    .attr('id', String)\n    .attr('viewBox', '0 -6 12 12')\n    .attr('refX', 24)\n    .attr('refY', 0)\n    .attr('markerWidth', 6)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto')\n    .append('svg:path')\n    .attr('d', 'M0,-6L12,0L0,6')\n\n  return {\n    height,\n    width,\n    svg: svgContent,\n  }\n}\n"]}