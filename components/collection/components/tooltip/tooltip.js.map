{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../src/components/tooltip/tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createPopper, Instance, Placement } from '@popperjs/core'\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core'\n\n@Component({\n  tag: 'stencila-tooltip',\n  styleUrls: {\n    default: 'tooltip.css',\n    material: 'tooltip.css',\n  },\n  scoped: true,\n})\nexport class Tooltip implements ComponentInterface {\n  @Element() el: HTMLStencilaTooltipElement\n\n  /**\n   * The text content of the Tooltip.\n   */\n  @Prop() text!: string\n\n  /**\n   * The placement of the tooltip\n   */\n  @Prop()\n  position: Placement = 'bottom'\n\n  private tooltipRef?: HTMLSpanElement\n  private popperRef: Instance | null = null\n\n  private showTooltip = (): void => {\n    // TODO: Use Schema helpers once package is updated: https://github.com/stencila/schema/issues/178\n    const target =\n      document.querySelector('[data-itemscope=\"root\"]') ?? document.body\n\n    if (this.tooltipRef === undefined) {\n      this.tooltipRef =\n        document.querySelector('stencila-tooltip-element') ??\n        document.createElement('stencila-tooltip-element')\n    }\n\n    this.tooltipRef.innerText = this.text\n    target.appendChild(this.tooltipRef)\n\n    this.popperRef = createPopper(this.el, this.tooltipRef, {\n      placement: this.position,\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [0, 8],\n          },\n        },\n        {\n          name: 'preventOverflow',\n        },\n      ],\n    })\n\n    window.addEventListener('mousemove', this.onMouseMoveHandler)\n  }\n\n  private onMouseMoveHandler = (e: MouseEvent): void => {\n    if (!this.el.contains(e.target as Node)) {\n      this.destroyTooltip()\n    }\n  }\n\n  private onMouseOutHandler = (e: MouseEvent): void => {\n    if (e.relatedTarget && !this.el.contains(e.relatedTarget as Node)) {\n      this.destroyTooltip()\n    }\n  }\n\n  private destroyTooltip = (): void => {\n    if (this.tooltipRef) {\n      this.tooltipRef.remove()\n    }\n\n    if (this.popperRef) {\n      this.popperRef.destroy()\n      this.popperRef = null\n    }\n\n    window.removeEventListener('mousemove', this.onMouseMoveHandler)\n  }\n\n  private loadComponent = (): void => {\n    this.el.addEventListener('focusin', this.showTooltip)\n    this.el.addEventListener('focusout', this.destroyTooltip)\n\n    this.el.addEventListener('mouseenter', this.showTooltip)\n    this.el.addEventListener('mouseout', this.onMouseOutHandler)\n  }\n\n  private unloadComponent = (): void => {\n    this.el.removeEventListener('focusin', this.showTooltip)\n    this.el.removeEventListener('focusout', this.destroyTooltip)\n\n    this.el.removeEventListener('mouseenter', this.showTooltip)\n    this.el.removeEventListener('mouseout', this.onMouseOutHandler)\n    window.removeEventListener('mousemove', this.onMouseMoveHandler)\n  }\n\n  public componentDidLoad(): void {\n    this.loadComponent()\n  }\n\n  public disconnectedCallback(): void {\n    this.unloadComponent()\n    this.destroyTooltip()\n  }\n\n  @Watch('text')\n  watchHandler(newText: string): void {\n    if (this.tooltipRef !== undefined) {\n      this.tooltipRef.innerText = newText\n\n      this.popperRef\n        ?.update()\n        .catch((err) => console.log('could not update Tooltip position\\n', err))\n    }\n  }\n\n  public render(): HTMLElement {\n    return (\n      <Host>\n        <slot />\n        <slot name=\"content\" />\n      </Host>\n    )\n  }\n}\n"]}