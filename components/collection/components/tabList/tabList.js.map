{"version":3,"file":"tabList.js","sourceRoot":"","sources":["../../../src/components/tabList/tabList.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AACzD,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,OAAO,CAAA;AAenC,MAAM,OAAO,OAAO;EARpB;IAcmB,mBAAc,GAAG,CAAC,CAAA;IAM3B,2BAAsB,GAAG,CAAC,CAAgB,EAAQ,EAAE;MAC1D,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;MACvE,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;MAChE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC,CAAA;IACtD,CAAC,CAAA;IAEO,iBAAY,GAClB,CAAC,GAAa,EAAE,KAAa,EAAE,EAAE,CACjC,CAAC,CAAa,EAAQ,EAAE;;MACtB,CAAC,CAAC,cAAc,EAAE,CAAA;MAClB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;MACrB,MAAA,GAAG,CAAC,OAAO,+CAAX,GAAG,EAAW,CAAC,CAAC,CAAA;IAClB,CAAC,CAAA;GAqBJ;EArCS,SAAS,CAAC,KAAa;IAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAA;EAC7B,CAAC;EAgBM,MAAM;IACX,OAAO,CACL,UAAI,IAAI,EAAC,SAAS,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,IACtD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAiB,EAAE;MAC3C,OAAO,CACL,oBACE,UAAU,EACR,GAAG,CAAC,UAAU,KAAK,IAAI;UACvB,CAAC,GAAG,CAAC,UAAU,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC,EAEjE,KAAK,EAAE,GAAG,CAAC,KAAK,EAChB,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,EACtC,QAAQ,EAAE,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAChD,CACH,CAAA;IACH,CAAC,CAAC,CACC,CACN,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, State } from '@stencil/core'\nimport { ord, number } from 'fp-ts'\nimport { Components } from '../../components'\n\nexport interface ChildTab extends Components.StencilaTab {\n  onClick?: (e: MouseEvent) => unknown\n}\n\n@Component({\n  tag: 'stencila-tab-list',\n  styleUrls: {\n    default: 'tabList.css',\n    material: 'tabList.material.css',\n  },\n  scoped: true,\n})\nexport class TabList {\n  /**\n   * A list of string values to use as tab labels\n   */\n  @Prop() public tabs!: ChildTab[]\n\n  @State() private activeTabIndex = 0\n\n  private selectTab(index: number): void {\n    this.activeTabIndex = index\n  }\n\n  private onKeyboardNavigateTabs = (e: KeyboardEvent): void => {\n    const dir = e.key === 'ArrowRight' ? 1 : e.key === 'ArrowLeft' ? -1 : 0\n    const constrain = ord.clamp(number.Ord)(0, this.tabs.length - 1)\n    this.selectTab(constrain(this.activeTabIndex + dir))\n  }\n\n  private clickHandler =\n    (tab: ChildTab, index: number) =>\n    (e: MouseEvent): void => {\n      e.preventDefault()\n      this.selectTab(index)\n      tab.onClick?.(e)\n    }\n\n  public render(): HTMLUListElement {\n    return (\n      <ul role=\"tablist\" onKeyDown={this.onKeyboardNavigateTabs}>\n        {this.tabs.map((tab, index): HTMLElement[] => {\n          return (\n            <stencila-tab\n              isSelected={\n                tab.isSelected === true ||\n                (tab.isSelected === undefined && index === this.activeTabIndex)\n              }\n              label={tab.label}\n              onClick={this.clickHandler(tab, index)}\n              tabIndex={index === this.activeTabIndex ? 0 : -1}\n            />\n          )\n        })}\n      </ul>\n    )\n  }\n}\n"]}