{"version":3,"file":"onUpdateHandlerExtension.js","sourceRoot":"","sources":["../../../../src/components/editor/customizations/onUpdateHandlerExtension.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAc,MAAM,kBAAkB,CAAA;AAIzD;;;GAGG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,aAAoC,EACzB,EAAE,CACb,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE;EACtC,IAAI,MAAM,CAAC,UAAU,EAAE;IACrB,aAAa,CAAC,MAAM,CAAC,CAAA;GACtB;AACH,CAAC,CAAC,CAAA","sourcesContent":["import { Extension } from '@codemirror/state'\nimport { EditorView, ViewUpdate } from '@codemirror/view'\n\nexport type EditorUpdateHandlerCb = (updateEvent?: ViewUpdate) => void\n\n/**\n * CodeMirror extension which accepts a callback function, and invokes the given\n * function whenever the document contents are updated.\n */\nexport const updateListenerExtension = (\n  updateHandler: EditorUpdateHandlerCb\n): Extension =>\n  EditorView.updateListener.of((update) => {\n    if (update.docChanged) {\n      updateHandler(update)\n    }\n  })\n"]}