{"version":3,"file":"error.js","sourceRoot":"","sources":["../../../src/components/error/error.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AAExE,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AAYtD,MAAM,OAAO,kBAAkB;EAR/B;IA+CE;;OAEG;IAEK,kBAAa,GAAG,KAAK,CAAA;IAU7B;;OAEG;IAEK,qBAAgB,GAAG,KAAK,CAAA;IAExB,2BAAsB,GAAG,CAAC,CAAa,EAAE,EAAE;MACjD,CAAC,CAAC,cAAc,EAAE,CAAA;MAClB,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAA;IAChD,CAAC,CAAA;GA8BF;EA/EC;;;;;KAKG;EACK,WAAW;;IACjB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;MAC5B,OAAM;KACP;IAED,MAAM,SAAS,GAAG,MAAA,MAAA,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CACtC,MAAM,CACP,CAAC,CAAC,CAAC,0CAAE,WAAW,0CAAE,WAAW,EAAE,CAAA;IAEhC,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,EAAE,EAAE;MACrD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACrC,CAAC,CAAC,MAAM;QACR,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;UAC5B,CAAC,CAAC,MAAM;UACR,CAAC,CAAC,OAAO,CAAA;KACZ;SAAM;MACL,IAAI,CAAC,KAAK,GAAG,OAAO,CAAA;KACrB;EACH,CAAC;EAQD;;KAEG;EACK,mBAAmB;;IACzB,MAAM,UAAU,GAAG,MAAA,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,0CAAE,WAAW,CAAA;IACvE,IAAI,CAAC,aAAa,GAAG,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,KAAK,EAAE,CAAA;EAC1E,CAAC;EAgBD,iBAAiB;IACf,IAAI,CAAC,WAAW,EAAE,CAAA;IAClB,IAAI,CAAC,mBAAmB,EAAE,CAAA;EAC5B,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAC,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB;QACxD,YAAM,IAAI,EAAC,MAAM,GAAG;QACpB,YAAM,IAAI,EAAC,SAAS,GAAG;QACvB,qBACE,IAAI,EAAC,OAAO,EACZ,KAAK,EAAE,mBAAmB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,GAC7C,CACb;MACN,wBACE,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAC3B,KAAK,EAAE,sBAAsB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE;QAE/D,YAAM,IAAI,EAAC,YAAY,GAAG,CACT,CACd,CACR,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Host, Prop, State } from '@stencil/core'\nimport { CodeError } from '@stencila/schema'\nimport { getSlotByName } from '../utils/slotSelectors'\n\nexport type Level = 'info' | 'warn' | 'error'\n\n@Component({\n  tag: 'stencila-code-error',\n  styleUrls: {\n    default: 'error.css',\n    material: 'error.css',\n  },\n  scoped: true,\n})\nexport class CodeErrorComponent {\n  /**\n   * The `CodeError` node\n   */\n  @Prop()\n  error?: CodeError\n\n  /**\n   * The severity of the error message\n   */\n  @Prop({ mutable: true, reflect: true })\n  level?: Level\n\n  /**\n   * Update the level, if not defined, based on the content of the `type` slot\n   *\n   * In the future, `CodeError` is likely to be replace with `CodeNotification` (or similar)\n   * and `level` will be a property (so it does not need to be derived here)\n   */\n  private updateLevel() {\n    if (this.level !== undefined) {\n      return\n    }\n\n    const errorType = getSlotByName(this.el)(\n      'type'\n    )[0]?.textContent?.toLowerCase()\n\n    if (typeof errorType === 'string' && errorType !== '') {\n      this.level = errorType.includes('info')\n        ? 'info'\n        : errorType.includes('warn')\n        ? 'warn'\n        : 'error'\n    } else {\n      this.level = 'error'\n    }\n  }\n\n  /**\n   * Flag for whether there is a stack trace\n   */\n  @State()\n  private hasStackTrace = false\n\n  /**\n   * Determine if the `stacktrace` slot has content\n   */\n  private updateHasStackTrace() {\n    const stackTrace = getSlotByName(this.el)('stacktrace')[0]?.textContent\n    this.hasStackTrace = typeof stackTrace === 'string' && stackTrace !== ''\n  }\n\n  /**\n   * Toggle for visibility of the stack trace\n   */\n  @State()\n  private stackTraceIsOpen = false\n\n  private toggleStackTraceIsOpen = (e: MouseEvent) => {\n    e.preventDefault()\n    this.stackTraceIsOpen = !this.stackTraceIsOpen\n  }\n\n  @Element()\n  private el: HTMLStencilaCodeErrorElement | null\n\n  componentWillLoad() {\n    this.updateLevel()\n    this.updateHasStackTrace()\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"overview\" onClick={this.toggleStackTraceIsOpen}>\n          <slot name=\"type\" />\n          <slot name=\"message\" />\n          <stencila-icon\n            icon=\"stack\"\n            class={`stacktrace-icon ${this.hasStackTrace ? '' : 'hide'}`}\n          ></stencila-icon>\n        </div>\n        <stencila-details\n          open={this.stackTraceIsOpen}\n          class={`stacktrace-details ${this.hasStackTrace ? '' : 'hide'}`}\n        >\n          <slot name=\"stacktrace\" />\n        </stencila-details>\n      </Host>\n    )\n  }\n}\n"]}